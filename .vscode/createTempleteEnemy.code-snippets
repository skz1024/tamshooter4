{
	// Place your tamshooter4 작업 영역 snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"createTempleateEnemyVer202305": {
		"scope": "javascript, typescript",
		"prefix": "createTempleateEnemy",
		"description": "새로운 적을 만들 때 간접적으로 활용하는 변수입니다. class 적이름 extends 적그룹 형태로 클래스를 선언하신 후에, 각 정보를 함수 설명에 맞게 입력해주세요.",
		"body": [
			"class ${1:TempleatEnemy} extends ${2:EnemyData} {",
			"  constructor () {",
			"    super()",
			"    this.setAutoImageData(this.imageSrc, ${3:imageDataInfo}, 4)",
			"    this.setEnemyByCpStat(${4:10}, ${5:10})",
			"    this.setDieEffectOption(${6:?})",
			"    this.isPossibleExit = true",
			"    this.isExitToReset = true",
			"    // 이 변수들 이외에도, set으로 시작하는 함수, is로 시작하는 변수를 통해 적의 정보를 설정할 수 있습니다.",
			"    // this.setRandomSpeed(2, 2) // speed option 또는 다른 함수 사용",
		  "    ${0}",
			"  }",
			"}"
		]
	},
}