참고: skz1024는 글을 작성하는 과정에서 계속 수정하다보니 실수로 번호를 잘못 지정할 수도 있음. (예를들어, 중간번호가 빠지는경우... 이건 실수입니다.)

2022/03/01 start?
2022/05/05 ver 0.10
- 대략적인 게임 코드 설계 완료
- 대부분의 기능은 미완성 상태입니다.

현재까지 추가된 기능
- 키보드 및 마우스 인식 (단, 이 게임에서는 키보드를 버튼처럼 취급합니다.)
- 사운드 기능 (아직 시스템 사운드만 있습니다.)
- 자동 저장 기능 (플레이 타임, 유저 첫 생성 날짜만 저장 가능)
- 필드 기능 (아군이 총알을 쏘고 적이 죽는것까지 구현되어있습니다.)

현재까지의 코드 상황을 저장하기 위해 0.1 버전을 만들었습니다.
(여기까지 완성하는데 약 2달... 이건 코드를 만드는게 어렵고 이것저것 실험을 많이 해서 그런겁니다.)


2022/05/14 ver 0.11-1
1. 코드의 구성이 변경되어, 이제 tamshooter4Data는 클래스만 리턴합니다.
  따라서, fieldState에서 직접 인스턴스를 생성하는 방식으로 변경되었습니다.
1-1. 이렇게 만든 이유는, 며칠동안 새로운 알고리즘을 추가하고, 한개에 함수에 몰아넣었던 로직을 다른 함수로 기능을 분리하는 과정에서, undefined 함수 참조 문제가 발생해, 원인을 찾아보니 data 함수에서는 해당 함수가 있었지만, fieldState의 fieldObject 클래스는 해당 함수가 없어 함수를 참조할 수 없는 문제가 발생했습니다.
1-2. 이 문제를 해결하는 기존 방법은, fieldObject 클래스에 data에서 사용되었던 함수를 지속적으로 추가하는 거였습니다. 그러나, 새로운 무기가 나온다면, 당연히 새로운 알고리즘이 나올것이고, 당연히 로직이 길어지는 과정에서 여러 함수들로 기능을 쪼갤것인데, 이렇게 되다보면 나중에 새로운 무기를 개발할때마다 새로운 함수를 fieldObject에 지속적으로 추가해야만 합니다. 이로 인하여, 기존 방식으로 개발하게되면 나중에 유지보수가 매우 힘들어집니다. 그 때문에, 새로운 방식을 며칠동안 고민해야 했습니다.
1-3. 결국, fieldState에서 직접 클래스 데이터를 받아와 인스턴스를 생성하는 방식으로 변경하였습니다. 자바스크립트는 배열에 다양한 객체를 넣을 수 있기 때문에 가능한 방법이였으며, 어떤 로직을 만들고 다른 함수로 기능을 분해한다고 해도, fieldState는 process, display, fieldProcess만 호출하면 모든 역할이 끝납니다.


2022/05/16 ver 0.11-2
1. damageObject가 추가되었습니다.
이 오브젝트는 적을 타격하여 데미지를 주었을 때 그 데미지의 값을 출력합니다.
이 오브젝트는 임시이며, 나중에 다른 형태로 변경될 수 있습니다.
2. missile 알고리즘이 추가되었습니다.
사실, multyshot은 구현하기가 매우 쉬웠지만, missile은 스플래시모드와 일반모드, 그리고 적 여러명을 동시에 때려야 하고 여러번 폭발해야 하기 때문에 구현하기 위해서는 복잡한 로직이 필요했습니다. 실제 코드를 보면 알 수 있듯이, 내부적으로 로직이 여러개로 분리되어 각 역할을 수행하는 것을 알 수 있습니다. multyshot은 따로 알고리즘이 존재하진 않지만, missile은 multyshot에 비해선 알고리즘 복잡한 편입니다. 그리고 이 미사일 알고리즘은, 이전에 만들었던 fieldObject 처리 방식을 변경하는 원인이 되었습니다. (자세한건 ver 0.11-1 참고)
3. effectObject가 추가되었습니다. 일단 목적은 간단해요. 이펙트 에니메이션을 출력하는 역할입니다. 첫번째 이펙트는 당연히 missile입니다. missile이 터지는 효과가 있어야 스플래시 데미지를 주는 느낌이 나니까요. multyshot은 이펙트가 필요 없지만, missile은 있어야 합니다.
4. 참고로, 이펙트는 모든 오브젝트가 가지고 있는 것은 아니고, 부분적으로만 가지고 있습니다. 어떤건 이펙트가 있고, 어떤건 이펙트가 없어요. 그냥 그렇습니다.
5. 이펙트의 투명도가 0.7(70%)로 조정됩니다. 이유는 눈아파서...
6. testAttackEnemy가 추가되었습니다. 딱히 의미는 없고, 플레이어 충돌시 데미지를 주느냐의 테스트 목적입니다.


2022/06/05 ver 0.12-1
1. 새로운 알고리즘(OBB 충돌 알고리즘)을 구현하고 찾아보는데 너무 많은 시간이 걸려 업데이트가 2주간 지연되었습니다. 겨우, 해당알고리즘을 사용하는 방법을 알아내 다시 게임 제작을 진행하려고 합니다. 다만 이 알고리즘은 추후에 추가됩니다.
2. EnimationData 클래스가 추가되었습니다. 이 클래스는 Data가 가지고 있는 에니메이션을 표현할 때 사용됩니다.
3. missile에 새로운 이펙트가 추가되었습니다. (다만, 그림이 작아서 잘 보이지는 않는듯?)
4. DelayData 클래스가 추가되었습니다. 이 클래스는 지연시관 관련 작업을 수행합니다. (예를 들어, 일정시간마다 무기를 발사하는 등... 의 용도로 사용)
5. DelayData, EnimationData 클래스의 추가로, 지연시간을 사용하는 데이터의 소스 코드가 모두 변경되었습니다. 이제 지연시간이 없으면 null로 처리합니다. 그리고 해당 객체에 대해 null 체크를 합니다.
6. 새로운 무기가 추가되었습니다. arrow, laser


2022/06/10 ver 0.12-2
1. 새로운 무기 추가: laser, sapia, parapo
2. laser 알고리즘이 완성되고, collisionOBB 클래스가 추가되어 회전한 사각형의 충돌 판정을 할 수 있습니다. (다만, OBB 충돌 방식은 일부 객체만 사용할 예정)
3. sapia 무기가 추가되었습니다. 이 무기는 적을 추적하면서 추가타격 및 추가샷을 사용합니다.
4. parapo 무기가 추가되었습니다. 이 무기는 적을 타격하면 일정 범위만큼 추가타격을 합니다.
5. 이번 무기까지 내용을 이번 버전에 임시 저장합니다.
6. 일부 무기들은 옵션이 필요하므로(새로 추가된 sapia), createWeapon에 일부 옵션을 사용할 수 있도록 한 후, 생성자에서 옵션을 받을 수 있도록 했습니다. (참고: 생성자에서 공통적인 요소(좌표값, 공격력)을 입력받지 않는 이유는, 새 생성자를 만들때마다 해당 내용을 계속 작성하기 귀찮기 때문입니다. 그래서 공통으로 입력받는것은 따로 분리를 해서 자동으로 입력받게끔 했습니다.)
6. 예상하지 못한 선 그리기의 색깔 버그를 수정했습니다. (무조건 검은색으로만 칠해지는건 버그임)


2022/06/12 ver 0.13
1. 새로운 무기 추가: blaster, sidewave
2. 이 시점에서 더이상 새로운 무기를 추가하지 않습니다. 이제 다른걸 만들어야 하기 때문입니다.
3. 생성자에서 인수를 받아 개별적인 처리가 가능함에 따라, 멀티샷의 모든 기능은 단일 클래스로 합쳐지고 필요없는 멀티샷 클래스 및 객체는 삭제됩니다. (대신 인수를 넣어 구분할 계획)
4. 스킬 개념이 곧 추가될 예정입니다.
5-1. 에니메이션 클래스의 출력 버그를 수정했습니다. 첫번째는 이미지 내의 y좌표를 잘못 계산한것이고, 두번째는 반복 횟수와 관한 출력 버그입니다.
5-2. 에니메이션 클래스의 내용이 일부 변경되었습니다. 이제 조금 더 명확한 단어를 사용합니다.
5-3. 에니메이션 지연시간은 기본값 1입니다. 이것은 초당 30번 재생하는것을 의미합니다. (참고로 게임은 초당 60프레임)
6-1. 반복횟수는 다음과 같은 의미로 재정의됩니다. 해당 행위를 반복하는 횟수, 단 실행된 후에 반복하는 것이 아니라 단순히 횟수만큼 반복을 합니다. 예를들어, 반복횟수가 0 또는 1인경우, 해당 객체는 1번 실행됩니다. 그리고 반복횟수가 2인경우, 해당 객체는 2번 실행됩니다. 반복횟수가 n인경우 해당 객체는 n번 실행됩니다.
6-2. 이것이 재정의 된 이유는, 실행한 후에 반복을 할 경우, 반복 횟수를 계산하는 과정이 꼬여 로직이 복잡해지기 때문입니다. 그래서 아예 실행횟수 = 반복횟수로 만들어버리기로 했습니다.
6-3. 따라서, 반복 횟수의 기본 값은 1입니다. 0으로 설정하면 아예 실행조차 되지 않고 삭제될 가능성이 있습니다.
7. 플레이어가 사용하는 무기의 총 공격력 percent가 약갼 변경되었습니다. 이것은 무기별 밸런스에 어느 정도 영향을 줄 것입니다.
8. 무기에 옵션 사용 설정에 따라, 불필요한 클래스와 객체는 제거되었습니다.
9. 무기의 공격력 반영 비율이 제대로 적용되지 않던 문제를 수정했습니다.

next!
이제 스킬이 나올 차례입니다!

2022/06/16 ver 0.14 스킬 추가
수정된 내용
1. arrow 이미지가 살짝 변경되었습니다.

추가된 내용
2. 총 8개의 스킬이 추가되었습니다. 대부분의 스킬 이름은 무기의 이름과 거의 동일합니다.
3. 스킬과 관련된 사운드가 추가되었습니다.
4. 스킬과 관련된 정보 및 이미지가 추가되었습니다.

스킬 테스트 안내
스킬 키의 기본값은 각: A, S, D, F 키 입니다.
X키로 스킬을 변경할 수 있고, Z키로 무기를 변경할 수 있습니다.
