참고: skz1024는 글을 작성하는 과정에서 계속 수정하다보니 실수로 번호를 잘못 지정할 수도 있음. (예를들어, 중간번호가 빠지는경우... 이건 실수입니다.)

2022/03/01 start?
2022/05/05 ver 0.10
- 대략적인 게임 코드 설계 완료
- 대부분의 기능은 미완성 상태입니다.

현재까지 추가된 기능
- 키보드 및 마우스 인식 (단, 이 게임에서는 키보드를 버튼처럼 취급합니다.)
- 사운드 기능 (아직 시스템 사운드만 있습니다.)
- 자동 저장 기능 (플레이 타임, 유저 첫 생성 날짜만 저장 가능)
- 필드 기능 (아군이 총알을 쏘고 적이 죽는것까지 구현되어있습니다.)

현재까지의 코드 상황을 저장하기 위해 0.1 버전을 만들었습니다.
(여기까지 완성하는데 약 2달... 이건 코드를 만드는게 어렵고 이것저것 실험을 많이 해서 그런겁니다.)


2022/05/14 ver 0.11-1
1. 코드의 구성이 변경되어, 이제 tamshooter4Data는 클래스만 리턴합니다.
  따라서, fieldState에서 직접 인스턴스를 생성하는 방식으로 변경되었습니다.
1-1. 이렇게 만든 이유는, 며칠동안 새로운 알고리즘을 추가하고, 한개에 함수에 몰아넣었던 로직을 다른 함수로 기능을 분리하는 과정에서, undefined 함수 참조 문제가 발생해, 원인을 찾아보니 data 함수에서는 해당 함수가 있었지만, fieldState의 fieldObject 클래스는 해당 함수가 없어 함수를 참조할 수 없는 문제가 발생했습니다.
1-2. 이 문제를 해결하는 기존 방법은, fieldObject 클래스에 data에서 사용되었던 함수를 지속적으로 추가하는 거였습니다. 그러나, 새로운 무기가 나온다면, 당연히 새로운 알고리즘이 나올것이고, 당연히 로직이 길어지는 과정에서 여러 함수들로 기능을 쪼갤것인데, 이렇게 되다보면 나중에 새로운 무기를 개발할때마다 새로운 함수를 fieldObject에 지속적으로 추가해야만 합니다. 이로 인하여, 기존 방식으로 개발하게되면 나중에 유지보수가 매우 힘들어집니다. 그 때문에, 새로운 방식을 며칠동안 고민해야 했습니다.
1-3. 결국, fieldState에서 직접 클래스 데이터를 받아와 인스턴스를 생성하는 방식으로 변경하였습니다. 자바스크립트는 배열에 다양한 객체를 넣을 수 있기 때문에 가능한 방법이였으며, 어떤 로직을 만들고 다른 함수로 기능을 분해한다고 해도, fieldState는 process, display, fieldProcess만 호출하면 모든 역할이 끝납니다.


2022/05/16 ver 0.11-2
1. damageObject가 추가되었습니다.
이 오브젝트는 적을 타격하여 데미지를 주었을 때 그 데미지의 값을 출력합니다.
이 오브젝트는 임시이며, 나중에 다른 형태로 변경될 수 있습니다.
2. missile 알고리즘이 추가되었습니다.
사실, multyshot은 구현하기가 매우 쉬웠지만, missile은 스플래시모드와 일반모드, 그리고 적 여러명을 동시에 때려야 하고 여러번 폭발해야 하기 때문에 구현하기 위해서는 복잡한 로직이 필요했습니다. 실제 코드를 보면 알 수 있듯이, 내부적으로 로직이 여러개로 분리되어 각 역할을 수행하는 것을 알 수 있습니다. multyshot은 따로 알고리즘이 존재하진 않지만, missile은 multyshot에 비해선 알고리즘 복잡한 편입니다. 그리고 이 미사일 알고리즘은, 이전에 만들었던 fieldObject 처리 방식을 변경하는 원인이 되었습니다. (자세한건 ver 0.11-1 참고)
3. effectObject가 추가되었습니다. 일단 목적은 간단해요. 이펙트 에니메이션을 출력하는 역할입니다. 첫번째 이펙트는 당연히 missile입니다. missile이 터지는 효과가 있어야 스플래시 데미지를 주는 느낌이 나니까요. multyshot은 이펙트가 필요 없지만, missile은 있어야 합니다.
4. 참고로, 이펙트는 모든 오브젝트가 가지고 있는 것은 아니고, 부분적으로만 가지고 있습니다. 어떤건 이펙트가 있고, 어떤건 이펙트가 없어요. 그냥 그렇습니다.
5. 이펙트의 투명도가 0.7(70%)로 조정됩니다. 이유는 눈아파서...
6. testAttackEnemy가 추가되었습니다. 딱히 의미는 없고, 플레이어 충돌시 데미지를 주느냐의 테스트 목적입니다.


2022/06/05 ver 0.12-1
1. 새로운 알고리즘(OBB 충돌 알고리즘)을 구현하고 찾아보는데 너무 많은 시간이 걸려 업데이트가 2주간 지연되었습니다. 겨우, 해당알고리즘을 사용하는 방법을 알아내 다시 게임 제작을 진행하려고 합니다. 다만 이 알고리즘은 추후에 추가됩니다.
2. EnimationData 클래스가 추가되었습니다. 이 클래스는 Data가 가지고 있는 에니메이션을 표현할 때 사용됩니다.
3. missile에 새로운 이펙트가 추가되었습니다. (다만, 그림이 작아서 잘 보이지는 않는듯?)
4. DelayData 클래스가 추가되었습니다. 이 클래스는 지연시관 관련 작업을 수행합니다. (예를 들어, 일정시간마다 무기를 발사하는 등... 의 용도로 사용)
5. DelayData, EnimationData 클래스의 추가로, 지연시간을 사용하는 데이터의 소스 코드가 모두 변경되었습니다. 이제 지연시간이 없으면 null로 처리합니다. 그리고 해당 객체에 대해 null 체크를 합니다.
6. 새로운 무기가 추가되었습니다. arrow, laser


2022/06/10 ver 0.12-2
1. 새로운 무기 추가: laser, sapia, parapo
2. laser 알고리즘이 완성되고, collisionOBB 클래스가 추가되어 회전한 사각형의 충돌 판정을 할 수 있습니다. (다만, OBB 충돌 방식은 일부 객체만 사용할 예정)
3. sapia 무기가 추가되었습니다. 이 무기는 적을 추적하면서 추가타격 및 추가샷을 사용합니다.
4. parapo 무기가 추가되었습니다. 이 무기는 적을 타격하면 일정 범위만큼 추가타격을 합니다.
5. 이번 무기까지 내용을 이번 버전에 임시 저장합니다.
6. 일부 무기들은 옵션이 필요하므로(새로 추가된 sapia), createWeapon에 일부 옵션을 사용할 수 있도록 한 후, 생성자에서 옵션을 받을 수 있도록 했습니다. (참고: 생성자에서 공통적인 요소(좌표값, 공격력)을 입력받지 않는 이유는, 새 생성자를 만들때마다 해당 내용을 계속 작성하기 귀찮기 때문입니다. 그래서 공통으로 입력받는것은 따로 분리를 해서 자동으로 입력받게끔 했습니다.)
6. 예상하지 못한 선 그리기의 색깔 버그를 수정했습니다. (무조건 검은색으로만 칠해지는건 버그임)


2022/06/12 ver 0.13
1. 새로운 무기 추가: blaster, sidewave
2. 이 시점에서 더이상 새로운 무기를 추가하지 않습니다. 이제 다른걸 만들어야 하기 때문입니다.
3. 생성자에서 인수를 받아 개별적인 처리가 가능함에 따라, 멀티샷의 모든 기능은 단일 클래스로 합쳐지고 필요없는 멀티샷 클래스 및 객체는 삭제됩니다. (대신 인수를 넣어 구분할 계획)
4. 스킬 개념이 곧 추가될 예정입니다.
5-1. 에니메이션 클래스의 출력 버그를 수정했습니다. 첫번째는 이미지 내의 y좌표를 잘못 계산한것이고, 두번째는 반복 횟수와 관한 출력 버그입니다.
5-2. 에니메이션 클래스의 내용이 일부 변경되었습니다. 이제 조금 더 명확한 단어를 사용합니다.
5-3. 에니메이션 지연시간은 기본값 1입니다. 이것은 초당 30번 재생하는것을 의미합니다. (참고로 게임은 초당 60프레임)
6-1. 반복횟수는 다음과 같은 의미로 재정의됩니다. 해당 행위를 반복하는 횟수, 단 실행된 후에 반복하는 것이 아니라 단순히 횟수만큼 반복을 합니다. 예를들어, 반복횟수가 0 또는 1인경우, 해당 객체는 1번 실행됩니다. 그리고 반복횟수가 2인경우, 해당 객체는 2번 실행됩니다. 반복횟수가 n인경우 해당 객체는 n번 실행됩니다.
6-2. 이것이 재정의 된 이유는, 실행한 후에 반복을 할 경우, 반복 횟수를 계산하는 과정이 꼬여 로직이 복잡해지기 때문입니다. 그래서 아예 실행횟수 = 반복횟수로 만들어버리기로 했습니다.
6-3. 따라서, 반복 횟수의 기본 값은 1입니다. 0으로 설정하면 아예 실행조차 되지 않고 삭제될 가능성이 있습니다.
7. 플레이어가 사용하는 무기의 총 공격력 percent가 약갼 변경되었습니다. 이것은 무기별 밸런스에 어느 정도 영향을 줄 것입니다.
8. 무기에 옵션 사용 설정에 따라, 불필요한 클래스와 객체는 제거되었습니다.
9. 무기의 공격력 반영 비율이 제대로 적용되지 않던 문제를 수정했습니다.

next!
이제 스킬이 나올 차례입니다!

2022/06/16 ver 0.14 스킬 추가
수정된 내용
1. arrow 이미지가 살짝 변경되었습니다.

추가된 내용
2. 총 8개의 스킬이 추가되었습니다. 대부분의 스킬 이름은 무기의 이름과 거의 동일합니다.
3. 스킬과 관련된 사운드가 추가되었습니다.
4. 스킬과 관련된 정보 및 이미지가 추가되었습니다.

스킬 테스트 안내
스킬 키의 기본값은 각: A, S, D, F 키 입니다.
X키로 스킬을 변경할 수 있고, Z키로 무기를 변경할 수 있습니다.


2022/06/24 ver 0.15
무려 1주일이 지났네요. 적을 만드는데 상당히 오랜 시간이 걸렸습니다.
특히, 회전 기능같은걸 생각하는데 너무 많은 시간을 사용해버렸네요.

추가된 내용
몇개의 적들이 추가되었습니다. 현재는 운석만 나옵니다. 다음엔 던전을 추가 할 계획입니다.

수정된 내용
1-1. playerWeaponData, playerSkillData는 static 클래스 방식에서 constuctor 방식으로 변경했습니다. 따라서 getPlayerWeaponData, getPlayerSkillData는 클래스를 리턴하지 않고, 이미 만들어진 객체를 리턴하게 됩니다.
1-2. 이렇게 바꾼 이유는, static 클래스에서 vscode 프로그램를 이용해 변수명을 변경했을 때 상속받은 클래스의 변수명이 변경되지 않았기 때문입니다. 이렇게 될 경우, 함수의 이름이나 변수명을 수정했을 때 이전클래스와 이후 클래스에 호환성 문제가 발생하므로, 다시 생성자 방식으로 변수를 사용하기로 했습니다. (인스턴스 생성하기 귀찮아서 static 사용했는데, 오히려 이것때문에 이후에 문제가 발생할 가능성이 높음.) 결국 다시 롤백...
2-1. 파라포 무기 반복횟수(충격파 포함)가 2 -> 1로 변경되었습니다. 왜냐하면, 데미지 계산식이 너무 복잡해지고 그에 따른 처리 프로세스도 늘어나기 때문. 대신 발사 간격이 줄어들었습니다.
3-1. 적이 죽은 상태에서 무기의 공격 처리를 막기 위해 무기가 공격하는 알고리즘 함수들을 몇개 분리하고, 리펙토링 하였습니다.
3-2. 죽은 적은 더이상 무기가 추적하지 않습니다.
3-3. 죽은 적은 더이상 남은 체력바를 보여주지 않습니다.
3-4. 데이터 내부에 들어가는 적의 ID는 필요할 때만 사용할 예정입니다. 사실 작성하기 귀찮다. 꼭 필요한 것도 아니고...
4-1. 생각해보니, 회전 및 뒤집기 요소가 필요할 것 같아서, 이를 지원하는 기능을 추가했습니다. 그런데 이걸 추가하다보니 고려해야 할 요소가 너무 많아져서, data에서 사용하는 기본 객체들의 출력 알고리즘을 일부 변경하였습니다.
5-1. 이제 대부분의 필드데이터는 이동 속도가 방향과 속도값으로 정의되고 대신 speedX, speedY는 잘 사용하지 않습니다. moveSpeed와 speed의 차이점은, 방향값이 있냐 없냐의 차이고, speed는 좌표 기준으로 속도값을 정의합니다. (+는 방향값 무시하고 오른쪽, 아래쪽으로 이동), moveSpeed는 moveDirection의 값에 따라 이동 방향이 달라집니다. 만약 방향값이 없다면, speed값을 그대로 사용합니다.
5-2. 이렇게 한 이유는, 속도값은 정의할 때 양수로 표현하는것이 바람직하기 때문입니다. 음수로 지정하면 데이터를 만들 때 혼동이 올 수 있습니다.
5-3. 하지만 속도값을 이동방향이 들어간 속도값으로 바꾸는 과정에서 엄청난 시행착오가 발생되었으나, 단순히 대소문자 오타로 확인됨.(...)
6-1. 레이저블루의 이동위치에 대해 보정값이 추가됩니다. 이상하게 적을 못때리더라...
7-1. 코드 일부를 javascriptStandardStyle로 수정합니다.



2022/06/27 ver 0.16
이 버전에서는, 일시정지가 가능하고, 약 20초동안 적이랑 싸울 수 있습니다.
어느 스테이지를 선택해도 똑같은 게임이 진행됩니다.
이제 게임의 기본적인 틀은 전부 완성되었습니다. 이제 각 라운드를 만들 수 있겠네요.

추가된 내용
1. 게임을 플레이한 결과와 관련된 이미지가 추가되었습니다.
2. 필드(게임 플레이)에서 일시정지를 및 결과에 사용되는 이미지가 추가되었습니다.
3. 라운드가 정상적으로 진행되는 로직이 추가되었습니다. (다만 라운드는 완성되지 않았음.)
4. 라운드 클리어, 게임 오버, 일시정지 사운드가 추가되었습니다.
5. alphabet 과 number의 bitmapFont가 추가되었습니다. (이미지 제작 용도)
6. 배경 화면 추가 (스크롤도 가능)

수정된 내용
1. enemyData의 processExitToReset 함수가 가지고 있던 맨위/맨아래, 맨왼쪽/맨오른쪽을 지속적으로 왕복하던 문제를 수정했습니다. 이 오류는 추적무기의 버그를 보고 알아냈는데, 처음엔 무기가 잘못 추적했다고 생각했으나, 진짜 이유는 적이 계속해서 잘못된 위치(맨 위, 맨 아래)를 왕복하고 있었기 때문입니다. 이 버그는 수정되었습니다.
2. fieldSystem의 damageObject는 더이상 FieldData의 데이터 형태가 아니라 독자적인 데이터를 가지며 처리 속도 향상을 위해 pool 방식으로 데이터를 처리합니다.
3. alphabet 과 number의 digitalFont가 합쳐졌습니다. svg 원본 파일도 같이 합쳐졌습니다.
4. fieldData를 표시할 때 배경색도 같이 출력됩니다. (기존엔 배경색이 없어서 배경이 검은색이면 데이터가 안보였음.)


2022/09/14 ver 0.17
한참만이네요. 정보처리기사 공부 도중 코로나에 걸린 이후 모든 의욕을 잃고 1달동안 하스스톤 전장만 했습니다. 그리고 전장 시즌도 끝나고, 아무 생각없이 있다가, 누군가가 웹 오디오 관련 코드 작성을 제안받고 개발 코드를 작성하는 도중에 의욕이 생겨 다시 도전하게 되었습니다. 원래대로라면 지금쯤 라운드 1이 완성되어있어야 할 시점인데 한참 늦어졌네요. 지금, 무슨 코드를 더 작성해야 하는지 기억이 나지 않습니다. 그래서 그냥 제 생각대로 업데이트 할 생각입니다.

지금 업데이트한 내용은 다음과 같습니다.
1. 사운드와 배경음악을 출력할 때 웹 오디오 API를 사용합니다. 배경음악은 약간의 에코 효과가 있습니다.
2. 볼륨을 설정하는 기능이 추가되었습니다. 마스터는 150%까지, 사운드와 배경음악은 100%까지 볼륨 조절이 10%단위로 가능합니다.
3. 옵션에서 설정한 값들이 저장되도록 했습니다. (그러나 아직 일부 옵션은 게임에 적용되지 않습니다.)
4. 임시 배경음악 (과거 optionbattle에서 사용했던것 중 하나) 재생, 그러나 음악이 재생되면 무한 반복되며 정지하지 않습니다.


2022/09/21 ver 0.21-1
라운드 1에서 사용할 모든 배경음악 추가
배경음악 작업이 끝났으므로, 라운드 제작 작업이 진행될 예정
적어도 1라운드는 완성해야 서버를 만들든 데이터베이스를 다루든 무언가를 할 수 있을거라 생각됨.
라운드 1의 배경음악 파일은 존재하지만, 게임 내에서는 아직 들을 수 없습니다.

2022/09/29 ver 0.21-2
1. 음악 파일 이름 오타 수정(...)
2. graphicDisplay 함수 설명 오타 수정
3. 라운드를 나가거나, 클리어, 게임오버일경우 배경음악이 정지됩니다. 일시정지의 경우 배경음악이 일시정지됩니다.
4. 이제 다른 옵션 없이도, flip 과 rotate 수정을 하면 자동으로 회전 및 뒤집기 효과를 적용하도록 변경되었다.
5. fieldData의 기본 display 함수는 코드의 편한 관리를 위해 defaultDisplay 함수를 호출하는것으로 변경하고, defaultDisplay 함수에 기본 출력 함수를 구현했습니다.
6. 라운드 선택 기능 추가
7. enemyBullet 추가
8. 적이 죽었을 때, 이펙트 와 사운드가 출력됩니다.
9. 옵션에서 설정값이 제대로 저장되지 않는 버그 수정(필드 옵션은 추후 적용 계획)
10. 플레이어가 데미지를 맞았을 때 사운드와 이펙트가 출력됩니다.
11. 그 외에도 코드 수정한게 이것저것 있습니다.

이제 좀 게임다워졌군요. 하지만 시간이 너무 오래 걸렸습니다.
필드 만드는데 3달... 1-1 만드는데 1달... 언제 1-6까지 완성하나...


2022/10/02 ver 0.21-3
이것저것 수정한것이 많은데도 아직 1-1까지만 완성되었습니다.

1. 적들의 스탯을 일부 수정하고 더 편하게 작성할 수 있도록 함수를 추가
2. enimation 부분은 다시 process와 display가 분리되었습니다. 코드 작성이 귀찮아서 합쳐놓았는데, 별로인것 같습니다.
3. round 1-1의 구조를 약간 변경하고, 라운드 관련 몇가지 함수들을 추가했습니다.
4. 일부 적 버그 수정
5. 보조 무기 추가(보조무기는 적을 자동으로 추적합니다.), 이것이 추가된 이유는 일부 무기는 유도성이 없어 화면 바깥에 있는 적을 못찾기 때문입니다.
6. 보조 무기 추가로 무기 밸런스 구조가 변경되었습니다.
6-1. 기존 (일반 1.0 + (스킬 0.8 * 4)) = 총합 4.2
6-2. 현재 (일반 1.0 + 보조 0.2 (스킬 0.8 * 4)) = 총합 4.4
7. multyshot, blasterMini의 추적 방식이 lineChase 방식으로 변경됩니다.
8. 플레이어 죽는 이펙트 추가


2022/10/04 ver 0.21-4
1. 주인공 레벨업 이펙트 추가
2. 경험치 테이블 변경
3. 클리어 보너스 적용
4. 라운드 코드 구조 다시 변경
5. 1-2 라운드 추가

기타
1. 저장기능은 추후 추가될 계획(아마 다음버전에 추가될듯)
2. 사실상 기초 작업은 전부 끝났으므로, 이제 새 라운드만 만들면 금방 완성될 것 같음.



2022/10/09 ver 0.22-1
1. 새로운 적 추가
2. 적 죽음 이펙트의 이름 변경
3. 어이없게도 OBB 충돌 알고리즘에서 꼭짓점의 위치를 잘못 계산한점이 발견되었습니다. 왜 이 오류가 발생했는지는 모르겠습니다. 해당 오류는 수정되었습니다. 이제 해당 알고리즘은 정확하게 동작합니다.
4. 아군이 무기를 사용하지 않는다면, 서브웨폰도 사용하지 않습니다.
5. 화면 바깥을 벗어나지 못하게 하는 알고리즘 오류 수정
6. 중간세이브 구간: 1-3은 다음 버전에 완성됩니다.
7. 정보처리기사 시험 대비로 약 7일간 업데이트가 없을 예정 (다만 심심하면 조금씩 만들 수 있음.)


2022/10/25 ver 0.23
1. 1-1 ~ 1-3 적들의 스탯 변경
2. 데이터 리셋 기능 추가
3. 1-3 정식 추가...
4. music05_space_tour는 악기가 변경되었음. (추후 변경 예정, 지금은 변경이 되지 않았습니다.)
5. 배경음악 페이드 인/아웃 기능 추가
6. 이제 레벨업 하면, 공격력이 상승합니다. 그러나 밸런스 규칙 상 공격력은 실시간으로 반영되지 않습니다.
7. 참고로, 스탯은 던전 플레이 도중에 변경되지 않습니다. (던전 내 버프 제외)
8. graphicSystem의 graidentDisplay 함수가 3개 이상의 색을 지원하도록 수정
9. 게임을 시작할 때 player의 기본 무기가 발사되도록 변경


2022/10/30 ver 0.24 (commit이 되지 않은 버전)
1. 라운드 1-4 추가
2. 플레이어가 화면 밑쪽으로 내려갈 때, 스탯 화면이 투명해지도록 수정
3. 데이터 삭제 추가
4. 사운드 볼륨이 정상적으로 적용되도록 수정(다만, 마스터볼륨은 별개로 취급 - 이 부분은 나중에 수정합니다.)
5. 아직 스킬은 디버그 단계 (2-2 까지 완성한 후에, 무기와 스킬을 더 추가하겠습니다.)
6. 플레이어의 쉴드가 낮은 속도로 회복되던 문제를 수정했습니다. (1초당 1회복을 해야 하나, 1.6초당 1회복했음.)
7. 게임 도중에 배경과 사운드를 변경할 수 있는 기능 추가


2022/11/01 ver 0.25 (0.24 포함 업데이트)
1. 라운드 1-5 추가
2. 배경화면을 출력할 때, 출력 기준점이 이미지 사이즈랑 일치하면 배경화면이 그려지지 않는 경우가 있습니다. 
2-2. 그래서 출력 기준이 이미지 사이즈 이상이면, 출력 기준점을 변경하도록 했습니다.
2-3. 이렇게 해도 문제 해결이 안되서, 아예 출력 방식에다가 screenBaseWidth, screenBaseHeight가 0인 경우도
2-4. 그림을 그려지도록 변경했습니다. 이렇게 해서 문제를 해결했습니다.
2-5. 추가로, 다른 배경 사이즈의 전환도 부드럽게 전환되도록 변경했습니다.

2022/11/03 ver 0.26
1. 라운드 1-6 추가, 이것으로 라운드 1의 모든 업데이트가 끝났습니다.

- 다음 목표 - 
1. 실시간 저장 기능 구현 (그러나, 필드전에서 모든 오브젝트의 상태를 저장하진 않습니다.)
2. 일렉트론을 사용해 데스크탑용 어플리케이션 빌드하기
3. 모바일은 구현이 가능할지 의문... 인터넷에 올리면 가능하긴 할 것 같은데...
4. 해당 목표까지 완료한 다음, 몇주 후에 2라운드 제작을 시작할거라고 예상됩니다.

다음 버전까지 완성한 다음 백업 파일을 만들 예정


2022/12/16 ver 0.30 - round 1 last version
아토피가 심해지고, 다른 업무 작업도 같이 하느라, 게임 제작에 많은 시간을 사용하지 않았습니다.
그리고 새로운 기능 추가에 상당한 시간이 걸려, 다음 업데이트까지 걸린 시간이 매우 오래 걸렸습니다.

이 버전이 라운드 1의 완전한 끝이며, 이 버전과 0.26버전은 백업된 상태로 보관할 것입니다.(내 usb와 ndrive에)
그리고 언젠가는, github.io에 이 게임을 플레이 할 수 있도록 파일을 올려놓을 예정입니다.

아쉽게도, 마우스 기능을 지원하지만, 키보드로만 세부 조작이 가능합니다.

1. 코드 리펙토링
1-1. ID 클래스를 담당하는 js파일이 분리되었습니다.
1-2. data.js에 있는 데이터들이 서로 다른 파일로 (dataEnemy.js 형태로) 분리되었습니다.
1-3. 이로 인해 초기화 순서(클래스를 초기화하기 전까지 다른 클래스에서 참조할 수 없음)를 다시 만들었습니다.
1-4. ID 에서 enemy 부분이 group으로 묶였습니다. 이제 enemy.spaceEnemy.light 식으로 접근합니다. (기존 enemy.spaceEnemyLight 형태, 종류가 많아질수록 자동완성 기능을 사용하기 불편함.)
1-5. dataExport 변수들이 추가되었습니다. 이것은 data.js에서 데이터를 간편하게 추가하기 위한 용도로 사용됩니다.
1-6. 이젠, switch/case가 아니라 Map을 이용해서, data.js의 데이터를 구성합니다.
1-7. dataStat 이 새로 추가되고, 스탯과 관련한 값은 여기에 저장합니다. (단, 아직 weapon은 이 데이터를 참조하진 않음)
1-8. playerSkill과 playerWeapon 알고리즘의 코드가 간략화되었습니다.

2. 커스텀 이펙트, 커스텀 불릿
2-1. 대부분의 객체들이 사용하는 이펙트를 관리하기 쉽도록 CustomEffect 클래스가 추가되었습니다.
2-2. 기존에 있었던 이펙트는 전부 삭제되었습니다. 그리고 이펙트 ID는 더이상 사용하지 않습니다.
2-3. 각 객체들은 여러 CustomEffect를 가지고 있으며, 이를 이용해 이펙트를 생성합니다. (라운드, 적, 무기 등등...)
2-4. 적들은 커스텀 불릿을 이용해서 총알을 발사합니다. 커스텀 불릿의 알고리즘은 적 내부에서 설정합니다.

3. 스킬 및 무기 추가
3-1. 새로운 스킬 및 무기가 더 추가되었습니다. 기본 스킬은 총 20종류입니다. 무기는 총 12종류입니다.
3-2. 스킬, 무기를 선택할 수 있는 메뉴가 추가되었습니다. (조만간 도움말 기능 추가 예정)
3-3. 스킬은 총 8종류를 사용할 수 있습니다. X키로 스킬 슬롯을 교체해서 다른 스킬로 교체할 수 있습니다. (다만, 쿨타임은 같은 번호끼리 공유됩니다.)
3-4. 아직 무기 및 스킬 도움말과 미리보기 기능이 지원되지 않습니다. 이것은 나중에 구현될 예정입니다.

4. 풀스크린 기능 추가(다만 임시기능임.), 그리고 캔버스의 크기가 변경되었을 때 마우스 좌표의 정확한 동작을 위한 코드도 추가
5. 레이저 무기의 공격방식 변경 (크기가 줄어들고, 발사 개체수 증가 및, 관통 수 감소, 파란색 레이저 이동 방식 변경 등...)

6. 효과음 확장자 변경
6-1. 대부분의 효과음의 확장자를 mp3 -> wav, ogg로 변경했습니다. 단 길이가 긴 오디오는 ogg를 사용합니다.
6-2. 경고: 무슨 일이 있어도 mp3를 효과음 용도로 사용하지 마세요. mp3는 사운드 양 끝에 0.05초 이상의 공백이 추가됩니다. 이 갭으로 인해 mp3을 효과음으로 사용하면 안됩니다.

7. 게임의 모든 데이터가 아닌, 일부 데이터(유저 레벨 및 경험치)만 초기화 할 수 있도록 기능을 추가했습니다. (플레이 타임 유지 가능), 다만 확인 창이 안뜨므로 실수로 누르면 안됩니다.

8. 실시간 저장 기능
8-1. 필드가 진행 중일 때에 필드 상태가 저장됩니다. 필드가 진행중이 아니면 필드 상태는 삭제됩니다.
8-2. 모든 필드 객체가 저장되는것이 아니고, 모든 객체의 세부정보가 저장되지 않습니다.
8-3. 이것은, 각 객체들을 JSON화 하는 과정에서 함수 및 객체의 내용을 잃어버리기 때문입니다.
8-4. weapon, enemy, enemybullet, player, round 이 5종류의 객체만 저장합니다.
8-5. effect는 저장하지 않습니다.
8-6. 저장된 필드를 불러올 때, 먼저 객체를 생성 후에, 저장된 값을 덮어 씌우는 과정을 반복합니다.
8-7. 각 객체 종류마다 저장하는 정보가 조금씩 다릅니다.

9. 메뉴가 이미지 형태로 변경됩니다.

10. 아직 옵션 중 일부는 적용되지 않습니다.


2022/12/26 ver 0.32-1
1. 신규 음악 추가
music09_paran_planet
music10_donggrami_maeul

2023/01/13 ver 0.32-2
round 2-3에 사용할 신규 음악 추가
(이 이외에도 몇개의 음악을 더 추가해야해서 개발되는데 시간이 오래 걸릴 수 있음.)


2023/03/20 ver 0.35.0
3개월만입니다. 그동안 포커를 치고, 컴퓨터 구매를 고민하고 많은 시간을 사용했습니다.
컴퓨터를 구매하기 위해 고민한 시간만 1달을 사용하고, 컴퓨터 조립을 하는데 3일, 그리고 조립 후 모니터 오류를 찾는데 2주가 걸렸습니다.
컴퓨터를 제대로 구성한 이후로는, 포커만 3주동안 하고... 포커도 질려버려서(레이크백 빼고 수익이 없었기 때문에)
다시 시간나는대로 게임 개발을 하기로 했습니다.

이제 기존 노트북 대비 8 ~ 12배의 성능 향상이 있었기 때문에, 컴퓨터 로딩면에서 엄청 빨라졌습니다.
모든 동작속도가 10배 이상 상향되었습니다. (부팅이나 프로그램 실행도 엄청나게 빠릅니다.)

현제 컴 스펙은
cpu: i5-12400f
graphic: RTX 3060 ti
SSD: samsung ssd 980 pro 1TB
memory: samsung DDR4 3200 16GB x 2
mainboard: asus prime b660m
(대략 총 134만원)

참고로 이전 노트북의 스펙은(2014년에 구매했던 것)
cpu: i3-3110m
graphic: 내장
memory: DDR3 8GB
(대략 할인해서 76만원 정도?)

입니다. 

제가 직업을 더 일찍 가졌더라면, 돈을 더 빨리 벌고 컴퓨터도 더 빨리 바꾸었을 것이고, 아마 이 게임도 더 빨리 개발되었겠지요.
하지만 시기가 늦었고... 컴을 변경한 시기가 2023년 2월 중반이 되었습니다.

이 게임은 정황상 2022년 3월에 개발을 시작한 것으로 보이는데, 제가 개발을 매일 하는것은 아니므로, 실제로는 오래 걸리지 않았습니다.
지금까지 실질적인 개발기간은 3 ~ 4개월정도밖에 안됩니다.(중간에 휴식이 많으므로)

컴퓨터도 변경되어서 이젠 작업속도가 엄청 빨라졌으므로, 업데이트 속도도 빨리질 것으로 기대합니다.
뭔가 쓸데없는 말을 많이 적었군요.


0.35.0 부터는 개발을 간편하게 만들고, 복잡한 구성에 대응할 수 있도록 자체 엔진 기능이 추가됩니다.
그리고 일부 코드들의 접근 방식을 변경합니다.

tamsaEngine이 새로 추가되었습니다. 그래픽, 사운드, 컨트롤(입력)의 구현을 담당하는 것입니다.
기존 graphic.js, control.js, sound.js 는 tamsaEngine에서 사용하도록 변경

그러나, 이렇게 변경하려면 기존에 사용했던 코드들의 연결을 전부 변경해야 합니다.
아니, 어차피 게임 내의 알고리즘도 한번에 갈아엎을 생각이므로, 게임 자체의 변화는 없지만, 코드 자체의 변화는 매우 많습니다.

이 작업은 최대한 빠르게 완료할 생각입니다. (이게 끝나지 않으면 다음 라운드를 만들 수 없음.)
엔진 작업은 며칠에 걸쳐서 진행될 예정입니다.


2023/03/22 ver 0.35.1
1. graphicSystem 변경
- 기존 함수들 중 일부는 호환성을 고려해서 아직 변경하진 않았습니다.
- gradient 출력방식을 변경하였습니다. 이로인해 기존에 사용하였던 일부 변수와 함수는 제거될 예정입니다.(호환성 문제를 해결한 후에)
- 이제 graphicSystem 자체적으로 캔버스를 가집니다. 따라서 html영역의 캔버스가 삭제됩니다.
- meter 출력방식을 약간 변경했습니다.
- imageDisplay보다 더 적은 매개변수를 사용할 수 있는 imageView가 추가되었습니다.

2. 파일들이 이동했습니다.
tamsaEngine에서 직접 사용하는 이미지들은 모두 엔진이 있는 폴더로 이동했습니다.
기존 image의 system 폴더에서 js의 tamsaEngine 폴더로 이동

3. 그래픽시스템의 변경은 여기까지이고, 따로 기능을 추가할 생각은 없습니다.
다른 작업을 마친 후에, 기존에 사용하였던 함수를 제거할 생각입니다.

4. 한동안은 에러로 인해 게임 실행이 불가능합니다. 0.3버전으로 게임을 실행해야 합니다.
해당 버전은 백업리포지토리에 올릴 예정


2023/03/27 ver 0.35.2
생각보다 만드는데 시간이 오래 걸렸습니다. (포커 탓도 있음...)
이제는 조금만 만들어도 커밋 푸쉬를 자주할까 생각중입니다. 너무 가끔 커밋하는거 같다.
(하지만 몰아서 한번에 커밋하는걸 더 좋아합니다.)

1. controlSystem 변경 (다만 기능이 더 추가되어야 합니다.)
- 모바일용 가상 키패드 추가(PC버전에서는 나오지 않음.)
- 기존 control class 버리고, 새 클래스를 만들었습니다.
- 터치를 지원하도록 변경
- 버튼 대응 수 추가(아직 확실하게 결정한것은 아닙니다.)
- xbox 게임패드랑 유사하게 만들었습니다. (pc에는 이게 표준인 것 같아서...)

2. bios 윈도우 추가
(곧 블루스크린도 등장할 예정?)

3. graphicSystem의 bitmapFont가 ascii 코드 처럼으로 동작하도록 변경하고
나머지 문자열들 대거 추가 (ascii 코드 32 ~ 126 번의 문자를 출력할 수 있습니다.)
덕분에 괄호, 기호, 대소문자등등을 전부 출력할 수 있습니다. (아쉽게도 한글은 불가능 ㅠㅠ)

4. tamsaengine에 가상 키패드에 필요한 이미지들 추가
(엔진이기에 따로 이미지파일을 분리하진 않았습니다.) 

이 버전으로는 게임이 실행이 되지 않습니다. 엔진 작업이 끝난 후, 게임 수정 작업을 할 예정입니다.


2023/03/31 ver 0.35.3
1. 이제 탐사엔진은 모바일의 가로/세로 모드를 지원합니다.
(다만 게임 제작 기준은 세로모드입니다.)
PC버전의 경우는 해당사항 없음

2. 이제 브라우저의 크기가 변경되면, 캔버스의 크기가 자동으로 조정됩니다.
나중에 게임 모드를 fixed or resized로 선택할 수 있게 변경할 예정(모바일은 제외)

3. 가로 버전 터치패드 레이아웃 추가 (모바일 전용)


2023/04/10 ver 0.35.4
이제... 사운드 시스템까지 완료되었습니다.
남은건... 그래픽 테스트... 의미가 있나... 아 몰라...

제작이 늦어진 이유는, 그놈의 포커를 오래 플레이 하기도 했고,
다른 작업도 같이 병행하면서 하느라 시간이 오래 걸렸습니다.
(물론 가장 큰 이유는 soundSystem이 너무 복잡해서 그런것이다.)

1. soundSystem 추가
2. web audio context를 resume하도록 유도하는 로직 추가
3. 음악, 효과음 재생 기능 추가
4. 에코, 에코 피드백 효과 추가
5. biosMenu를 간편하게 작성할 수 있게 만드는 클래스 추가
6. 기존 메뉴 알고리즘 일부 변경


2023/04/10 ver 0.35.5 - graphicTest 추가
- 이전 버전에 대한 커밋 메세지 오타가 있음... 그러나 무시할 예정(어차피 의미없다.)
이번 버전이 엔진 업데이트의 거의 마지막입니다.
이제 게임이 어느 정도 동작하는지 확인을 해야 합니다. (코드를 너무 많이 변경했기 때문에 에러가 많습니다.)

1. 모바일 터치패드
1-1. 화살표 터치패드를 누를경우 이미지 보기와 같은 창이 뜨지 않도록 변경
1-2. 화살표를 제외하고는 터치를 시작한 상태로 이동했을 때 터치가 연속 입력되지 않도록 변경(buttonInput만 해당)
2. soundtest에서 나가면 사운드가 꺼지도록 변경
3. graphicTest 추가
4. bios 입장 방법은 select + start 버튼을 부팅 2초 이내에 입력하면 됩니다. (나머지 방법은 조작 통일성을 위해서 제거되었습니다.)
5. graphicSystem 에서 bitmapDisplay, digitalFontDisplay가 flip과 rotate 효과가 적용되지 않던 문제 수정


2023/04/12 ver 0.35.6 엔진의 기능 일부 수정 (아이폰 비공식 지원... 그로 인한 기능 일부 추가)
1. 모바일 터치패드
1-1. (터치패드를 누르는 동안 확대/축소, 이미지 버튼이 뜨게 하는것을 막기 위해 각 이벤트에 preventDefualt 를 추가했습니다.)
1-2. 터치패드는 input입력이라도 쭉 누를경우 down을 입력한 것처럼(다만 판정은 input) 동작하도록 변경했습니다.
1-3. button process 처리를 위하여 setInterval 함수가 추가되었습니다.
2. soundSystem - audioContext
이제 사운드 시스템에서 audioContext를 활성화하기 위하여, 터치, 클릭, 키다운 이벤트를 추가했습니다.
(touchstart, keydown, click) 을 사용하면, audioContext의 resume() 을 실행합니다.
3. 아이폰에서도 기능이 동작함을 확인했습니다...(하지만 아이폰은 비공식 지원입니다.)
4. 이제 확대/축소가 가능합니다. 단, 터치패드를 누르는 동안은 확대/축소되지 않습니다.
주의하세요. 터치패드는 확대/축소를 하면 영역이 유지되지 않습니다.
5. 캔버스 클릭/터치도 preventDefualt를 추가했습니다.
6. 나는 아이폰과 사파리(맥...)에서 어떻게 오디오 사운드를 출력해야 하는지를 깨달았지만,
지금은 그 부분을 업데이트하지 않겠습니다. (mp3 쓰기 싫은데, 맥용을 따로 만들어야하네...)
7. 조만간 효과음은 버퍼 방식, 음악은 오디오 객체 방식으로 재생하게끔 변경할 것입니다.
(참고, 오디오는 트랙 방식이고, 중복을 허용할 수도 있고, 아닐 수도 있습니다.)
8. graphic test의 refresh rate 추가, 다만... 게임은 그와 별개로 고정프레임...
(쉽게말해서 모니터 주파수는 감지 가능하지만 게임에 영향이 없습니다.)


2023/04/18 ver 0.36.0
아직 이 버전으로는 게임을 플레이 할 수는 없습니다. (메뉴만 사용 가능)

1. 엔진 수정작업 완료
2. 현재 메인화면까지 실행 가능
3. 사운드를 로드하는 방식을 변경했습니다. 이제 오디오 경로를 호출하면
엔진이 알아서 사운드 객체를 생성해 재생해 줍니다. 버퍼도 마찬가지
(단, 시간이 오래 걸리면 사운드가 안나올 수 있으므로, 로딩이 오래 걸리는건 시작시 로딩 필요)
주의: 모바일 지원을 위하여, 특정 이벤트(터치, 키다운, 클릭)가 발생해야만 사운드 로딩이 시작됩니다.
4. 이미지를 로드하는 방식을 변경했습니다. 이제 이미지 객체가 아닌 경로를 입력하여
이미지를 출력합니다. (다만 이미지 객체를 그대로 사용할 수도 있습니다.)
이미지도 등록이 가능하며, 출력할 때도 자동으로 등록되지만 바로 출력이 되지 않으므로 권장하지 않음.
5. 옵션 설정값 및 구조 변경 (이로 인해 이전 버전과 세이브가 오류가 발생할 수 있음.)
6. digitalFont는 이제 tamshooter4 전용으로 이동하고, ascii 코드를 기준으로 배치되었습니다.
7. graphicSystem이 number, ascii 기반의 글자를 이미지로 출력할 수 있도록 새로운 함수 추가
8. 모바일 실행가능 (주의: 아이폰은 소리가 안남(왜냐고... 파일이 ogg거든... 사파리는 이걸 몰라...))


2023/04/18 ver 0.36.1 - 순환 참조 막기 진행, 안정화 작업 진행중
1. 순환 참조 문제를 막기 위해 서로의 파일을 서로 참조하지 않도록 변경중...
2. 이로인하여 여러 참조를 하는 구조를 전면적으로 변경(너무 복잡해서 설명 불가...)

전반적인 구조
// 엔진 및 게임의 시작점
tamshooter4(시작점) <- game, gameFunction(공용 함수) <- tamsaEngine <- control, graphic, sound
// 필드 및 데이터
tamshooter4(시작점) <- field <- data <- dataWeapon, dataEnemy, dataEffect등... <- dataStat
아마 이렇게 구성 될 것 같습니다.

field는 더이상 gameSystem을 직접 수정할 수 없습니다.
대신, gameSystem에서 field가 보낸 메세지를 이용하여 게임 시스템 값이 간접적으로 변경됩니다.
게임이 실행 가능해지면 0.37.0 으로 버전을 변경하겠습니다.

버그 수정
1. 다른 슬롯에 스킬이 장착되지 않은 상태에서 스킬을 사용할 수 없는 현상 수정
2. control.js 모바일 패드가 R1, R2버튼의 위치가 서로 변경되었습니다. (R2, R1은 잘못된 순서였으며 R1, R2로 변경합니다.)

모바일 버전에서 어느 정도 게임이 진행되는것을 확인했습니다.
이제 몇가지만 더 수정하고, 배경음악 관련 기능 및 프리로드 기능을 추가한 후에, 버전을 더 올리겠습니다.
아... 곧있으면 라운드2가 시작된다... 이게 몇개월만이냐...



2023/04/23 ver 0.36.2 - field system의 message 기능 추가
1. 이제 field, round 같은곳에서는 message 기능을 사용하여 추가적인 메세지를 기록합니다.
외부에서 이 메세지를 통하여 이를 참조하는 객체가 원하는 값을 스스로 수정하게끔 유도합니다.
2. 이것이 기존 방식과 다른점이 무엇이냐면, 기존에는 field가 직접 gameSystem을 수정했지만,
이제 더이상 field는 gameSystem을 참조하지도 않고, 수정하지도 않습니다.
단, userSystem은 game객체로 전역화되었기때문에, field에서도, gameSystem에서도 서로 참조할 수 있습니다.
3. 조금 더 정확히 말하면, 이젠 참조 순서가 명확해지고, 같은 등급의 파일이 서로 참조하는 방식은 금지됩니다.
4. (아직 이 기능은 구체적으로 만들어지진 않았습니다. 계속 완성해나갈 예정입니다.)

[엔진의 경우]
tamsaEngine.js -> control, sound, graphic
여기서 tamsaEngine은 control, sound, graphic을 참조하지만, graphic은 sound를 참조하지 않고
sound는 control을 참조하지 않습니다.

[게임의 경우]
tamshooter4, field, data -> dataId (데이터의 id값, 여기저기서 참고하지만 dataId는 임포트를 하지 않음.)
tamshooter4 -> game (게임 기능과 관련한 변수는 대부분 여기에 있습니다.)
field -> game (필드 시스템에서 유저 정보와 게임 로직 구현을 위해 game 파일을 참고함)
field -> data (필드를 구성하는 데이터를 가져옴)

그러나 다음은 불가능(이것이 기존 방식)
field <-> tamshooter4 (동급 레벨, 서로는 참조하지 않습니다.)

대신 이렇게 됨(이것이 현재 방식)
tamshooter4 -> field (tamshooter4는 field를 참조합니다.)

그런데 이렇게하면, field에서는 tamshooter4 파일의 데이터 값을 변경할 수 없습니다.(참조가 불가능하므로)
그래서, field에 message 변수를 추가했습니다. 또한 메세지는 string이지만 오타가 날 수 있으므로
messageList란 상수값도 추가했습니다.

아마 다른 자바스크립트 파일도 서로 참조가능성이 있는 파일들은 전부 message 처리를 하도록 유도할 것입니다.

[데이터 참조순위, 화살표 방향순으로 참조합니다. 화살표의 반대방향으로 참조하지 않습니다.]
[동급 순위여도 서로 참조하는것은 금지됩니다. (순환 참조 금지)]
field -> data -> dataPlayer, dataRound -> dataEnemy, dataWeapon -> dataField, dataEffect, dataStat

추가사항: 만약, 순환참조 밑에 있는 레벨이 외부 변수에 데이터를 직접 참고해야할 일이 있다면,
다른 방법을 사용하여 구현할 예정입니다.


2023/04/23 ver 0.36.3 - soundsystem 관련 요소 변경
1. soundTest 파일이 변경되었습니다. (내가 예전에 만들었었든 음악 중 하나입니다.)
각 파일은 mp3, ogg로 나누어져 존재합니다. 이것은 따로 테스트가 가능합니다.
지원하지 않는 파일 형태는 바이오스에서 NOT supported. 가 뜨게 됩니다.
참고: 사파리는 ogg 사용 불가능.
참고2: mp3 파일은 모든 브라우저가 지원하지만 루프할 때 중간에 끊김(mp3 포맷 특성상 갭이 존재함.)
3. soundSystem에서 audioContext를 사용할 때 오디오가 재생될때만 firstGain에 연결되도록 변경했습니다.
확인해보니, 사운드 파일을 연결할 때마다 렌더링 용량이 계속 증가하여, 사운드가 깨지는 현상이 발생했는데,
그 이유가 너무 많은 파일을 연결했기 때문입니다.
PC버전에서는 문제가 없지만(컴퓨터 성능빨로), 모바일 버전에서는 문제가 생겼으므로, 해당 문제를 수정했습니다.
(참고: 오디오는 pause 이벤트를 받으면 자동으로 오디오 컨텍스트와의 연결을 해제합니다.)
4. 음악 다중 트랙 기능은 다른 함수로 분리되었습니다. 다만 현재는 다중 트랙 기능의 지원이 끝났습니다.
이제 음악은 단일 트랙으로만 재생이 가능합니다.
5. 음악은 무조건 loop 속성이 추가됩니다. 그러나 효과음에서 loop 속성을 제거하지 않으므로 주의하세요.
그래서 효과음을 절대로 musicPlay로 재생하면 안됩니다! 효과음이 무한루프되어 문제가 발생할 수 있습니다.
6. 이제 버퍼재생이 완전히 지원됩니다.
7. 음악의 페이드인도 정상적으로 적용됩니다.
8. 바이오스 사운드 테스트 메뉴에 몇가지 테스트 기능을 추가했습니다.


2023/04/23 ver 0.36.4 - bios 수정
1-1. 바이오스는 다른 클래스로 분류됩니다.
1-2. 사용자가 바이오스를 로드하지 않는다면 바이오스 클래스는 null이됩니다.
1-3. 게임이 지정된경우 bios를 실행하지 않습니다.
1-4. 바이오스를 실행하려면 새로고침 후 2초 이내에 start + select 버튼을 누르셔야 합니다. (키보드 del키도 가능)
2. 이제 그래픽과 로직은 분리됩니다.
참고: 사용자는 임의적으로 process함수에 출력을 넣을 수도 있습니다. 게임 엔진은 그것을 감지할 수 없습니다. 
그렇다 하더래도 가급적이면 그래픽 함수는 display에, 나머지는 process에 넣어주세요.
그래픽 출력과 로직 처리는 분리되어야 합니다.
3. tamsaEngine.js 는 ts-check가 적용되어있습니다.
4. 게임이 존재하지 않을경우 바이오스메뉴를 나갈 수 없습니다.


2023/04/26 ver 0.36.5 - message 기능 추가, statLine의 값은 전역변수화
1. 이제 필드는 gameSystem을 참조하지 않습니다. (단, game에 있는 userSystem같은것은 참조할 수 있음)
2. 따라서 gameSystem에서는 field가 준 메세지를 통해 현재 상태를 변경합니다.
3. 게임 화면에 표시되는 statLine의 데이터는 game.js로 이동했습니다. 그래픽과 출력은 여전히 tamshooter4.js에서 처리합니다.
4. 하지만 이렇게 함으로써, gameSystem을 참조 하지 않고도 statLine을 외부에서 변경할 수 있게 되었습니다.
5. 음악 출력 방식 변경 (아직 미완성, 음악을 변경하는것에 대한 대응이 없음.)
6. 엔진은 버퍼를 지원하나, 게임 내부적으로는 버퍼를 사용하지 않습니다.
7. 그리고 아직 버퍼 관련해서는 로직이 제대로 완성이 안된 상태입니다. 이것은 나중에 더 구현할 예정.
8. 음악 부분을 제외하고는 오류 없이 게임을 즐길 수 있습니다. (다음이 마지막 보완 업데이트일듯)


2023/04/26 ver 0.36.6 - fade 수정, 엔진 작업 마지막 마무리
1. 이미지는 필요한 순간에만 로드합니다.
2. 라운드 내부에서 사용하는 이미지와 사운드는 미리 로드됩니다.
3. 한번 로드한 이미지, 오디오 객체는 새로고침하기전까지 삭제되지 않습니다. (가비지 수집 불가능)
4. fade 코드를 전부 수정했습니다. (음악을 정지했을 때 오디오 컨텍스트랑 연결이 끊겨서 페이드가 오작동 하는 현상이 있었음.)
5. 음악은 대부분 미리 로드합니다.
6. 게임은 로딩 창을 절대로 표시하지 않으며, 게임을 진행하는 도중에도 이미지와 사운드를 로드할 수 있습니다.
7. 이번이 엔진 수정 작업의 마지막 업데이트입니다. 다음 버전부터는 라운드 2를 제작할 예정입니다.
8. 나머지 코드들중 일부는 ts-check 를 적용하였습니다.
9. 자동 세이브 기능중, 음악의 위치를 저장했던 기능이 중단되었습니다. 음악 파일을 로드하지 못하여 재생이 안되기 때문입니다.
10. 이 외에도 수정할 것이 많이 있긴 하나, 너무 복잡해지므로 지금은 여기까지만 하고, 다음 라운드 작업을 시작할겁니다.
11. 라운드 2-1부터는 코드 구조가 일부 변경될 것 같습니다.
12. 로딩의 특성 때문에, 일부 적들이나 오디오가 표시되지 않는 경우가 있습니다. 이것은 버그로 처리하지 않습니다.


2023/05/04 ver 0.37.1 - round 2 배경 이미지 추가, 적 이미지 추가
1. 버그 목록
처음 시작할 때, 기본 셋팅이 적용되지 않음.
일부 적들의 이미지와 사운드를 미리 불러오지 않음.
바이오스 적용 셋팅이 게임에서도 적용됨 (음악 에코 효과)

2. 변경된 사항
게임 내에서 에코 효과를 사용하지 않도록 처리
바이오스의 에코 테스트가 게임에 영향을 미치지 않도록 변경
일부 적들의 사운드와 이미지를 특정 상황에서 미리 불러오도록 변경
(게임 시작할 때 미리 불러오는것이 아니라, 특정 라운드를 시작해야 불러옵니다.)
(그러나 불러오는 시간이 늦다면, 이미지가 출력되지 않는 현상이 생길 수도 있습니다.)

3. round 2-2 배경 이미지 추가
4. round 2 donggramiEnemy 이미지 추가
5. 배경이미지를 만들때 사용했던 레이어들의 파일을 다른 폴더에 저장했습니다.

참고: 일부 버그는 나중에 해결할 예정입니다.


2023/05/16 ver 0.37.2 - round 2 일부 효과음 추가, 동그라미 적 추가, 동그라미 이펙트 추가
동그라미 알고리즘및 아이디어를 생각하는데 너무 오래 걸렸습니다.
그래서, 업데이트가 많이 늦어졌습니다. (그걸 감안해도 2-1이 언제 나올지 알 수 없음...)

1. 동그라미가 사용하는 효과음이 추가되었습니다.
2. enemyDieDonggrami1의 파일 이름이 변경되고, enemyDieDonggrami2는 삭제되었습니다. 소리를 겹쳐서 표현할 이유가 없기 때문입니다.
3. donggramiColor에 whitesmoke 색상이 추가되었습니다. 빈 공간을 채우기 위해 만들어졌습니다.
4. enemyData 클래스의 processExitToReset 함수가 음수값의 이동속도를 정상적으로 처리하도록 했습니다.
5. 필드 객체에 이동방향이 없을 때 기본값을 지정하도록 변경 (기존에는 이동방향이 없는 경우가 있을 수 있었지만, 이젠 아닙니다.)
6. 동그라미 적 추가
7. 동그라미 관련 이펙트 추가
8. 이모지 동그라미 추가


2023/05/23 ver 0.37.3 - 라운드 선택 방식 보완, 이미지 출력 추가
며칠동안 휴식하느라(전장도 하면서...) 다음 업데이트까지 시간이 오래 걸렸습니다.
이번 버전부터는 커밋 메세지에 버전과 제목을 표시하고, 날짜는 삭제할 예정입니다.
[어차피 커밋 날짜를 볼 수 있으므로, 굳이 적을 필요가 없음]
<단, 업데이트 내용은 그대로 작성합니다.>

1. 라운드 선택 화면이 약간 변경되었습니다.
2. 각 라운드 기호에 해당하는 이미지가 추가되었습니다.
[아직 기능이 제대로 완성되지 않았으며 추가 업데이트를 할 예정입니다.]


2023/05/27 ver 0.37.4 - 라운드 정보 추가, 동그라미 적 추가
1. 라운드 선택 화면에서 간략하게 라운드 화면을 확인할 수 있도록 라운드의 정보를 표시하도록 추가
2. dataStat에 statRound이 추가되었습니다.
3. 새로 만들어지는 라운드는 dataExportStatRound를 기반으로 재구성됩니다. (이전에 만들었던 라운드도 시간이 지나면서 수정 예정)
4. 동그라미 알고리즘 부분적으로 수정
5. 새로운 동그라미 적 추가
6. 메모리 누수를 방지하기 위해, 서로를 참조하는 오브젝트가 교체될 때에는 null값을 먼저 대입한 후에 다시 대입하기로 했습니다.
7. 메모리 누수를 방지하기 위해, 다른 오브젝트가 임의로 추가한 field 객체를 참조할때는 항상 isDelete 옵션을 확인하고 삭제될 수 있도록 코드를 추가했습니다.


2023/05/28 ver 0.37.5 - round 2-1 추가
1. round 2-1 추가되었습니다.
2. 동그라미 적들의 알고리즘이 일부 수정됨
(느낌표는 연속으로 느낌표를 띄움, 물음표의 이동속도 조정, 보스가 좀 더 자유자재로 이동)
3. round 2-2 에 사용할 이미지를 추가로 수정했습니다.
4. round 2-1 에 안개 배경이 추가되었습니다.


2023/06/07 ver 0.37.6 - round 2-2 추가
1주일 만이네요. (그동안 포커를 쳤었지... 다른걸 하느라 게임개발 집중을 못했다.)
이 다음버전에서, 기존 라운드와 데이터 저장에 대해 약간의 수정이 있을 계획입니다.

1. 적 이동속도롤 랜덤으로 지정하는 함수인 setRandomSpeed 가 마이너스 범위를 제대로 지원하지 않던 버그 수정
2. round 2-2 추가 (하지만 추가적인 수정이 필요)
3. 동그라미 적 종류 추가 (speed, bounce)
4. 다른 대화를 하는 동그라미 종류 추가


2023/06/08 ver 0.38.1 - 음악 일부 요소 변경, roundData 에 다른 요소들을 저장하기 위한 변수 확정
참고사항: 음악을 만들 때 기본적으로 mono로 만듭니다. (일부 음악안 약간의 stereo가 들어감)
1. music05_space_tour 의 음악이 약간 변경되었습니다. (드럼 사운드와 악기를 변경, 노래는 동일)
2. music09_paran_planet 의 음악이 약간 변경되었습니다. (볼륨 수정, 일부 악기의 attack 수정)
3. music10_donggrami_maeul 의 음악의 메인 음색을 변경(옛날 optionbattle 시절 음색이 더 좋은 것 같음)
4. 음악의 용량을 낮추기 위하여, 일부 음악을 mono로, 음질은 128kbps로 조절할까 고민하고 있음.
[모노/스테레오 = 86kbps/128kbps, 112kbps/192kbps]
5. 저장 기능에 대한 고민
무기는 상관없지만, 일부 적들은 특이한 알고리즘을 가진 경우가 있습니다.
그러나, 이에 대한 정보는 저장되지 않습니다. 이로 인하여, 저장 후 불러오기 했을 때 일부 적들은 다른 행동을 할 수 있습니다.
이와 관련한 것은 버그로 처리하지 않습니다.
라운드도 마찬가지로 각 라운드마다 진행 형식이 다를 수 있으며, 이에 따라 특이한 알고리즘을 가질 수도 있습니다.
라운드 내부의 정보는 게임을 진행할 때 중요하므로, 일부 라운드는 진행상황과 관련한 정보를 일부 가지고 있어야 합니다.
이에 따라, 각 라운드에는 saveString을 조정할 수 있는 함수가 추가되었습니다.
형식은 자유이기 때문에, 어떤 라운드가 어떤 형식으로 저장할 지 알 수 없으며, 다만 string 형태로만 저장 가능
6. roundData에 일부 데이터를 추가로 저장하도록 string 관련 기능 수정
[다음 버전에서 완성할 예정입니다. - 이 버전에서는 음악 수정만 우선적으로 적용]


version.txt 와 commit message와의 관계
commit message(커밋 메세지)는 필요한 정보만 커밋 메세지에 추가됩니다.
version.txt의 모든 내용을 담지 않습니다.
그리고 commit 날짜가 자동으로 적히므로, 날짜도 커밋 메세지에 표시하지 않습니다.

최종적으로, commit message는 다음과 같이 표현됩니다.
version number (버전 번호) - title (제목)
content (내용)

대략 ver 0.37 부터 이 형식을 암묵적으로 확정지었는데, 아마 이 형태로 계속 쓰일것입니다.


2023/06/08 ver 0.38.2 - 라운드 기능 변경, 기타 오류 수정, 음악 음질 및 용량 수정
1. roundData에 있는 saveString 처리 함수 추가
2. 현재 배경음악이 어디까지 재생되어있는지도 저장하여 불러오는 기능 구현 완료
3. 에니메이션을 가진 적이 이미지를 가져오지 못해 이미지를 출력 못하는 버그 수정
4. 이제 모든 라운드가 dataStat에서 스탯 정보를 받도록 수정됩니다.
5. 음악 재생 원리 일부 수정 (음악을 정지한 상태에서도 재생했다가 정지하는 버그가 있었음)
6. 일부 적들의 안티에일러싱 효과로 인한 엉뚱한 것이 보여지는것들을 막기 위해 크기나 이미지 내부의 위치 변경
7. 192kbps, 128kbps에 대해 고민을 많이 해보았으나, 128kbps는 음질이 너무 낮기 때문에, 
ogg로 내보내기 할때는 q6(스테레오 192, 모노 110)으로 처리하겠습니다. (이것이 기본 기준으로 처리) [다만, 음악마다 다를 수도 있음.]
8. sound에서 setEchoDisable 함수를 사용할 때 나온 오류를 수정했습니다.
9. 일부 적들의 효과음이 처음 사용될 때 효과음이 나오지 않는 문제 수정
10. 다음 페이드 음악을 지정하지 않아도, 페이드 효과가 정상적으로 적용되고 다음 음악은 재생되지 않습니다. (해당 기능 관련 버그 수정)
11. 시간이 멈추었을 때, 남은 적을 statLine(필드 또는 메인에서 추가 정보를 표시하는 곳)에 표시하도록 합니다.
(그러나 현재 이것은 임시 기능이며, 라운드에 표시할지, 필드에 표시할지 결정하지 않았습니다.)
12. 라운드 선택 화면에서 라운드 제목 표시

라운드 수정 내용
1. setAutoRoundStat 적용 (이제 각 라운드별 스탯은 dataStat에서 가져옴)
2. 시간을 정지시키는 조건문을 함수로 대체
3. saveString 조작을 다른 함수에서 직접 하도록 변경 (관리가 더 편해짐)

각 라운드별 수정 내용
1-3: 페이즈 3에서 music03이 23초 근처부터 재생되도록 변경
[일부 적들: 안티에일러싱 회피를 위해 이미지에서 1픽셀씩 이동시켰음]
1-4: 보스 등장 방식 변경, 운석 등장시 배경 흔들리는 값 조정
1-5: 배경이 조금 더 자연스럽게 변화하도록 중간 단계가 추가되었고, 1-5 배경의 밝기가 감소했습니다.
2-1, 2-2: saveString을 사용하여 현재 배경과 관련된 정보를 저장하도록 변경, 난이도 감소, 보스 체력 표시 추가
2-2: 게임 내부에서 에코 효과를 사용할 수 있도록 변경 및 터널에서의 검은 배경 효과가 부드럽게 진행되도록 알고리즘 수정


2023/06/11 ver 0.38.3 - 새로운 음악 추가, 사용되지 않는 음악 그리고 효과음 삭제, vopm preset 추가
round 2-3에 사용할 음악이 총 9개가 추가되었습니다.
사용되지 않는 곡은 전부 삭제했습니다.

다른 컴퓨터에서도 프로젝트 파일을 복원하기 위해서 vopm vst 플러그인의 preset을 따로 저장해 두었습니다.
[11번곡에 대해 해당사항을 모두 적용함]
참고: 원래대로라면 음악 제목은 music11A1_donggrami_space_battle_room 과 같은 형태여야 하지만,
이렇게 하면 음악 이름이 너무 길기 때문에 donggrami_space 부분을 지웠습니다.
어차피 music11이 라운드 2-3에서 주로 사용하는 음악이기도 하니, 이름을 줄여서 표현해도 상관없을듯

참고: 사용되지 않는 효과음이 하나 있었는데(enemyDieMeteoriteStone.wav) 해당 효과음을 이 버전에서 삭제했습니다. 

곡 리스트
music11A1_battle_room
music11A2_break_room
music11A3_power_room
music11B1_jump_room
music11B2_warp_room
music11B3_move_room
music11C1_bullet_room
music11C2_square_room
music11C3_trap_room


2023/06/16 ver 0.38.4 - round 2-3 일부 적 추가 (아직 해당구역 미완성)
1. 속도를 범위형태로 랜덤설정할 수 있는 함수 추가
2. fieldState에서 출력 우선순위 변경 (적과 이펙트의 순서를 변경해서) 이펙트가 적 위에 표시되도록 함.
3. round 2-3 a1 구역에 사용할 적 추가 [패턴은 완성되었으나, 아직 라운드 내부에서의 데미지 처리는 완료되지 않음.]


2023/06/18 ver 0.38.5 - round 2-3 a1 구역 완성
1. 대략적으로 만들어진 round 2-3 의 a1구역이 드디어 완성되었습니다.
2. round 2-3에서 사용될 이미지 및 사운드 추가
3. 플레이어는 더이상 화면 바깥으로 이동할 수 없습니다. (원래 이 문제는 한참 전에 해결했어야 했을 문제)
참고: 몇개의 구역을 더 만든 후에, 아마도 각 구역끼리 클래스로 묶어야 할 것 같음.
(이 round 2-3만 700줄을 넘어감. 숨막힌다. 코드가 너무 길어졌어!)


2023/06/21 ver 0.38.6 - round 2-3 b1, c1 구역, 일부 버그 수정
1. 플레이어의 이동속도가 moveSpeedX, moveSpeedY를 사용하도록 재정의 (기존엔 속도값을 숫자로 지정해두었음.)
2. music10_donggrami_maeul 음악이 약간 수정됨 (악기 볼륨등등...)
3. donggramiEnemyBounce의 튕기기 버그 수정 (화면 바닥에 닿지 않아도 튕겨지는 문제가 있었음.)
4. round 2-3의 b1, c1구역 추가, 코스 선택에서 현재 위치와 선택된 위치가 표시
5. 참고사항: 시간이 지날수록 각 구역들이 추가되겠지만, 모든 구역이 추가되기전까지 아직 미완성 상태입니다.


2023/06/25 ver 0.38.7 - round 2-3 a2, b2, c2 구역 임시 생성
1. fieldState에 spriteObject 추가 및 관련 로직 작성. (커스텀용 오브젝트가 필요할 때 사용합니다.)
2. spriteObject는 저장이 불가능합니다.
왜냐하면 로드했을 때 클래스를 재생성해야 하는데, 이 과정에서 어떤클래스를 생성해야 할 지 알 수 없기 때문입니다.
3. outAreaCheck가 감지 범위를 조사할 수 있도록 기능이 추가되었고, 기존의 exitAreaCheck는 deprecated 되었습니다.
(참고: deprecated 는 나중에 업데이트를 하면서 코드를 정리할 때 같이 삭제됩니다. - 언제 할지는 모름...)
4. fieldData를 외부에서 참조 또는 수정 목적으로 만들어진 공통변수인 message가 추가되었습니다.
5. fieldData의 내부 process를 수정하고, 이에 따라 weaponObject, enemyObject의 로직도 같이 수정되었습니다.
6. 현재 round2-3의 a2, b2, c2 구역을 임시로 만들었습니다. (그러나 아직 미완성)


2023/07/02 ver 0.38.8 - round 2-3 모든 리소스 제작 완료
1. round 2-3에 사용할 모든 리소스를 제작하였습니다.
2. 이제 코드만 추가적으로 완성하면 해당 라운드는 완성됩니다.
3. music11A3_power_room 음악 변경
4. 일부 이미지들은 한개로 통합되었습니다.

약 1주일동안 포커만쳤지만, 적자나서 그만둠... 시간만 낭비했다. 배드런 개같은게임.


2023/07/07 ver 0.38.9 - round 2-3 a3, b3, c3 구역 추가(다만 추가작업이 더 필요함)
버그 수정
1. 적을 삭제하는과정에서, 로직이 잘못 처리될 수 있는 설계 결함 문제를 해결했습니다.
(2-3 a2에서, 벽돌의 정렬이 올바르지 않은 문제가 있었음)
해당 개체의 로직을 전부 완료한 후에 삭제를 하는 과정을 거치는데, 여기서 배열이 한칸씩 밀리는 문제가 있는것으로 추정됩니다.
그래서, 로직 처리와 삭제 과정을 분리하였습니다.
2. playerLevel에 따른 공격력 추가값으로 인한 오류를 수정했습니다.

추가된 기능
1. player를 강제로 특정 위치로 튕겨나가게 하는 함수 추가 (다만 이펙트는 없습니다.)


2023/07/12 ver 0.39.0 - 이미지, 사운드 로딩 시스템 추가
1. 이제 tamshoote4 게임을 실행하면 진행중인 로딩 상황이 표시됩니다.
다만, 로딩이 매우 빠를경우, 해당 화면을 보지 못할 수도 있습니다.
2. 이제 라운드를 실행하면, 해당하는 라운드에 필요한 이미지와 사운드 파일이 로드됩니다.
[주의: 라운드는 한 묶음 단위이며, 예를들어 1라운드는 1-1 ~ 1-6을 전부 포함합니다.]
[따라서, 맨 처음 실행했을 때는 로딩에 상당한 시간이 필요할 수 있습니다.]
3. 참고: 제작자가 실수로 명시적으로 로드하지 못한 경우, 해당 리소스가 필요한 순간에 자동으로 로드합니다.
[사운드의 경우 로드한 순간에는 출력이 안되고, 다음번에 그 사운드를 사용했을 때 로드가 완료되어 사운드가 출력됩니다.]
[이미지는 로드가 완료되는 즉시 실시간으로 출력됩니다.]
5. 사운드도 로딩을 진행하지만, 사용자의 제스처가 있어야만 로딩이 가능해서, 사운드는 로딩 진행과 상관없이 게임이 시작되고
이로 인해, 라운드 시작 직후에 일시적으로 렉이 걸릴 수 있습니다.
6. 일부 이미지 파일의 경로 변경


2023/07/12 ver 0.39.1 - round 2-3 완성
1. round 2-3이 완성되었습니다. 일부 코드를 정리하고 이미지를 수정했습니다.
2. 참고: round 2-3을 의도적으로 빨리 깰 수 있는 패턴은 사용할 수 없습니다. 이것은 게임의 규칙입니다.
[단, 유저가 빠르게 선택하여 다음 코스를 진행하는것은 해당되지 않음]
3. 일부 알고리즘 수정
4. 적들은 의도적으로 체력이 많이 있게끔 수정했습니다. (그래도 죽일 수는 있지만, 0점이라 의미가 없습니다.)
5. 얻는 점수는 코스를 완료했을 때 얻는 점수만 존재합니다. (경험치 규칙상 win/lose의 차이는 거의 없습니다.)
[클리어 보너스랑 별개]


2023/08/24 ver 0.39.2 - round 2-4 배경 추가
오랜만입니다. 약 1달간 게임 제작을 하지 않았습니다. 이유는 포커와 전장을 너무 오래 했기 때문입니다.
이제 전장도 많이 질렸고, 포커는 재미가 없기 때문에 다시 게임제작으로 돌아왔습니다.

round 2-4는 배경이 좀 많습니다. (물론 그래픽 품질은 낮음... 대충 만들거라서...)
대략적인 컨셉을 정해두긴 했지만, 만들어야 하는 그림 개수가 많아서 얼마나 걸릴지 모르겠습니다.

추가된 그림은 대략 shop, outside 구역입니다.
outside는 계단을 통해 옥상으로 이동하여, 산 속으로 들어간 후, 침입자와의 전투 후에, 공원으로 내려와 지하실로 이동합니다.
inside는 아마도 건물 내를 이리저리 이동하다가 최종적으로 지하실로 들어가게 됩니다.
shop는 상점이고, 아이템을 구매할 수 있습니다. (그러나 골드가 구현되지 않아서, 지금은 아무것도 할 수 없습니다.)

지금은 outside의 일부 배경만 업데이트 되었습니다. 앞으로도 더 많은 배경이 업데이트 될 예정입니다.
[다만, 그래픽 품질은 보증할 수 없음.]


2023/08/25 ver 0.39.3 - round 2-4 배경 추가 (아웃사이드 구간)
아웃사이드 구간에 사용하는 모든 배경을 추가했습니다.


2023/09/10 ver 0.39.4 - round 2-4 데이터 추가, 그래픽 스크롤 버그 수정, 에니메이션 생성 함수 추가
1. 이제 pause 상태일 때 전용 메세지를 전송할 수 있습니다. 메세지가 없으면 필드 시스템이 현재 남은 적수를 알려줍니다.
이 메세지는 특정한 상황에서만 사용합니다.
2. enimation을 다른 방식으로 만들 수 있도록 기능 추가, 설명 오타 수정(frameDelay는 1로 설정하면 초당 60프레임, 2로 설정하면 30프레임으로 재생됩니다.)
3. 이제 배경 그래픽은 음수 좌표값에서도 정상적으로 스크롤됩니다. (자세히보니, 양수 좌표값에서만 정상적으로 스크롤 되는 코드였음... 이걸 이제야 알다니...)
4. 그외 round2-4에서 사용할 이미지 추가
5. donggramiSpace enemy가 삭제되고 전부 donggramiEnemy로 합쳐졌습니다. (이미지, 코드, 아이디, 적의 정보 포함)


2023/09/14 ver 0.39.5 - round 2-4 데이터 추가, 알고리즘 세분화를 위해 processState 함수 추가, 적 총알 에니메이션 재생 가능
1. FieldObject에 processState 추가 [기존에는 processMove를 상태 변경에 주로 사용했었음]
2. enemyBullet이 에니메이션을 재생할 수 없는 문제 수정
3. round 2-4에 사용할 적들이 추가되었습니다. (아직 보스는 완성되지 않음.)


2023/09/21 ver 0.39.6 - round 2-4 데이터 추가, 신규 보스 추가
1. 신규 배경음악 추가: music12_donggrami_hall_outside
2. 불필요한 파일들은 삭제 예정입니다.
3. round 2-4 ~ 2-5에 나올 보스 추가
4. round 2-6 완성 이후 일부 파일은 압축할 예정


2023/09/26 ver 0.39.7 - round 2-4 1차 완성, 그외 기타 버그 수정
1. graphicSystem (game.graphic)의 글로벌 설정이 적용되지 않던 문제 수정 (이것은 0.39.6에서 해결된 문제이나 공지에 적히지 않음)
2. test round 버그 수정 및, 이미지 사운드 로드 코드 오류 수정
3. round 2-4 에서 엘리베이터가 출력되지 않던 버그 수정 (이 버그는 로딩 문제로 발생한 것이고, 따라서 미리 로딩하도록 변경한 후, 엘리베이터 에니메이션 재생 대기시간을 재조정하였습니다.)
4. field 에서 exit 또는 gameover 또는 clear 상태가 되면 필드 상태를 저장하지 않습니다. 따라서 새로고침하면 무조건 메인화면으로 이동합니다.
(기존에는 결과 창이 뜨는 형태로 계속 진행되었음)
5. round 2-4 밸런스 수정 아마 10월 중간쯤에 완성할 것으로 추측됨. (inside는 특별한 요소가 많지는 않음...)
6. 자동 크기 조절 관련 함수 수정
(게임 옵션 조정에 자동 크기 조절될 수 있도록 할 예정입니다. - 물론 옵션 상태도 저장할 예정)
7. 라운드 2-4가 1차로 완성되었습니다. 현재 outside 구간만 플레이 가능
(참고, 부분적으로 완성되었기 때문에 아직 디버그 코드가 남아있습니다.)
8. 라운드 1-3에서 마지막 페이즈에서 배경이 움직이던 오류 수정
9. 음악 페이즈와 관련한 버그 수정, 그리고 음악을 정지시키거나 재생시키면 기존 페이즈 효과는 삭제하도록 변경


2023/09/29 ver 0.39.8 - round 2-4 2차 완성, 옵션 설정 적용 가능, 기본 무기 그리고 스킬 설정
1. 게임을 맨 처음 시작시 기본 무기, 스킬을 적용하도록 변경 (그외 일부 초기화 코드 추가(버그 방지용))
2. 이제 옵션이 정상적으로 적용됩니다. 옵션값도 저장되며, 불러올때 옵션이 자동 설정됩니다.
3. 필드에서도 음악, 사운드 설정을 할 수 있습니다.
4. 페이드 인/아웃 기능은 현재 일부 버그가 있습니다.
5. round2-4 관련
- 인사이드 구간 구성 완료
- 엘리베이터 스프라이트 내부 배경 이미지 추가
- 아웃사이드 구간 배경 수정
- 페이즈 구간 변경 및 클리어 시간 감소 (기존 240초 -> 220초 -> 207초)
- 페이즈 1, 2가 서로 통합되고, 복도와 엘리베이터 이동 속도가 더 빨라짐
- 아직 상점 구간은 완성이 되지 않았습니다. 그러나 현재 시점에서는 완성할 계획이 없습니다.
- 밸런스 수정


2023/10/04 ver 0.40.0 - round 2-5 intruderEnemy image, effect 추가
- 참고사항: intruderEnemy는 2-4 ~ 2-6에서 등장합니다. (다만, 2-5가 기준임)
1. intruderEnemy에 대한 이미지와 이미지데이터 추가


2023/10/04 ver 0.40.1 - round 2-5 사운드 추가
1. intruderEnemy에 대한 사운드 추가
2. round 2-5에 사용될 사운드 추가


2023/10/04 ver 0.40.2 - round 2-5 음악 추가
추가된 음악: music14_intruder_battle.ogg


2023/10/08 ver 0.40.3 - round 2-5 적 데이터 추가 및 버그 수정
1. enimationData의 finish 체크에 관한 버그 수정, 반복 카운트를 계산하는 변수의 기본값을 0에서 1로 변경
2. intruderEnemy 이펙트 추가
3. 이동 방향에 따른 움직임을 정할때, 이동 방향이 없는 코드에 대한 처리 추가(이동방향이 없는것과 있는것은 약간 차이가 있습니다.)
(이동방향이 없으면 좌표값을 기준으로 오른쪽, 아래방향으로 값이 증가합니다. 이것은 회전각도 아크탄젠트 계산을 위해 코드를 변경했습니다.)
4. intruderEnemy 사운드 수정


2023/10/08 ver 0.40.3 hotfix1 - 적 ID 버그 수정(round 1에 잘못된 적이 등장하는 오류가 있음)


2023/10/10 ver 0.40.4 - round 2-5 추가
새로운 라운드가 추가되었습니다.
참고: 이 라운드는 기존 라운드보다 적이 매우 많기 때문에 일반적인 적의 점수 기준을 적용하면 다른 라운드보다 점수가 높을 수 있습니다. 
그래서 intruderEnemy들은 얻는 점수가 낮습니다.

- 기타 수정 사항
1. 이미지 파일을 정상적으로 로드하지 못한 상태에서 이미지를 출력해 오류가 발생한 문제 수정
(이제 정상적으로 로드되지 않는 이미지는 이미지의 너비 또는 넓이가 0이므로, 이를 확인하여 이미지 출력을 무시할 수 있습니다.)
2. 적의 체력표시 위치가 약간 변경되었습니다. (y + height -> y + height - 1)
(적이 맨 밑에 있어도 이젠 체력바가 표시될 수 있습니다. (다만, 적 맨 밑라인의 스프라이트를 가릴수도 있음. 어차피 1px차이라 의미는 없지만))
3. 시간이 멈춘 상태에서도 interval 함수가 동작할 수 있도록 판정 공식을 변경
(currentTimeTotalFrame -> totalFrame) currentTimeTotalFrame은 시간이 멈출경우 동작하지 않음
4. round 2-4 outside구간에서 특정 시간에 나무와 나뭇잎이 자동으로 죽는것으로 변경 (동그라미는 도망감)
5. round 2-4 inside구간에서 점수 보정을 위해 특정 페이즈 클리어시 약간의 보너스 점수가 있음.
(그러나, 이것은 outside와 inside의 점수 차이를 줄이기 위해서 주는 점수입니다.)


2023/10/12 ver 0.40.5 - round 2-6 추가, 라운드 2 배경의 안내 표지판 변경
참고: 2-6은 완성되었지만, 아직 라운드 2가 완료된 것은 아닙니다. 이제 리펙토링 작업을 일부 거치고 나머지 작업을 마무리 해야합니다.
1. round2-4의 엘리베이터는 static으로 변경되었습니다. (왜냐하면 2-6에서도 필요하다.)
2. round2에 사용되었던 플래카드의 이미지를 전부 변경했습니다.
3. round 2-3 배경 일부 변경 (첫번째 배경, 마지막 배경만), 스크롤 제거
4. round 2-4 배경 일부 변경 (엘리베이터 부분만)
5. 적의 이동방향 알고리즘을 수정하는 과정에서 생긴 버그 수정 (2-3에 나오는 a1적의 지진 기술에서 이동하지 않는 오류가 있었음)
6. 배경 fade시 중간에 검정색 배경을 같이 출력하던 부분 제거
(원래 이 기능은, 배경을 전환할때 투명도 변환으로 인해 하얀색 화면이 출력되던것(정확하게는 캔버스의 배경색)을 제거하기 위해 등장했지만
저의 의도와는 다르게, 화면 전환중 검정색 배경이 출력되는 문제가 있었고, 이를 확인하는 과정에서 해당 코드를 제거하는것으로 변경했습니다.)


2023/10/25 ver 0.41.0 - 그래픽 및 게임 최적화에 대해서, graphicSystem의 backgroundDisplay 추가, 적 이동 버그 수정
배경 출력 기능 실험에 많은 시간을 소모하였지만, 결론은... 복잡한걸 만들지 말고 단순하게 출력하는 코드만 만들어두는게 좋을 것 같다는 생각입니다.
라운드에 사용하였던 배경 출력 기능은 더이상 사용하지 않을 예정입니다. 대신 그래픽시스템의 그래픽 기능을 사용할 예정입니다.

1. graphicSystem.backgroundDisplay -> 배경 출력 함수
[특징: 이미지가 캔버스보다 작으면 자동으로 확대되고 아닐경우 그대로 출력함]
2. 특정 적의 방향이 지정되지 않았을 때 exitToReset이 작동하지 않던 버그 수정
3. 그래픽 최적화에 관해 약 4일간 고민해보았습니다. 대략적인 결론은 이렇습니다.
- 오프스크린 캔버스를 사용하면, 약 2 ~ 3%의 성능 이득이 있었습니다. 아주 큰 차이는 아닙니다.
- 이미지를 출력하는 횟수가 많으면 (canvas의 drawImage와 같은 함수) 많을수록 성능 하락은 심해집니다.
- 현재 tamshooter4에서 평균적으로 이미지를 그리는 횟수는 메인화면에서 약 40 ~ 100사이, 실제 게임에서는 평균적으로 200을 넘지는 않습니다.
- 캔버스를 워커로 돌려보기도 해보았지만, 오히려 오버헤드가 심하게 발생해서 성능이 감소하였습니다. 가장 큰 이유는 이미지를 복사하는 과정 때문입니다.
- 따라서, 그래픽 최적화를 하려면 단순하게도 출력하는 이미지의 양을 줄이면 됩니다.
- 참고로, 그래픽을 확대하는것도 상당한 성능 하락은 있지만, 그것보다는 이미지의 출력 크기가 더 중요한 것 같습니다.
- 그래픽을 사이즈 확대/축소 없이 출력하는것이 성능적으로는 좋습니다.
4. 지금시점에서는 꼭 필요한 출력 위주만 출력하고, 만약 오브젝트 수가 너무 많아 문제가 생긴다면, 차라리 오브젝트 수를 줄여서 최적화를 하겠습니다.
5. 다른 기타 코드의 대한 최적화
- class 내부에 대한 상수값에 대해 static vs instance 그다지 큰 의미 없음 (사실상 체감이 안됨)
- Math.random 의 엄청난 사용 - 수십만번아 아니므로 상관없음
- 삭제 주기 등등...
6. 현재시점에서는 코드를 최적화 할 단계는 아닙니다. (이 결론을 내리는데 약 4일 걸렸습니다.)
예상과는 다르게 게임 로직 처리에 사용하는 CPU는 약 11 ~ 12%이고, 게임 출력에 사용하는 CPU는 약 50% 이상이였습니다.
그러므로, 핵심은 출력량을 줄이는것입니다.


2023/10/26 ver 0.41.1 - RoundData의 변수들을 클래스로 통합화하고 불필요한 코드 제거, bgLayer 추가, 하위호환을 위한 bgLegacy
1. bgLayer가 추가되었습니다. 배경을 여러개 연결할 수 있고, 다중 레이어(레이어 하나당 단일 이미지만 가능)를 지원합니다.
2. 기존 배경 출력 코드들은 전부 bgLegacy 코드로 교체되었습니다.
3. RoundData의 각 변수들을 클래스별로 역할을 나누어 통합했습니다. (또한 그로 인하여 코드도 많이 교체되었습니다.)
- 세이브 변수가 key값을 받아서 처리한것에서 각 변수에 값을 직접 넣도록 변경되었습니다. (이제 라운드 내부에 있는 객체로 전환되므로 key로 값을 대입할 수 없습니다.)
- time과 관련한 변수는 BaseTime 클래스에 통합되었습니다.
- phase과 관련한 변수는 BasePhase 클래스에 통합되었습니다.
- sound과 관련한 변수는 BaseSound 클래스에 통합되고 static 으로 관리됩니다.
- field과 관련한 변수는 BaseField 클래스에 통합되고 static 으로 관리됩니다.
- meter과 관련한 변수는 BaseMeter 클래스에 통합되고 static 으로 관리됩니다.
- stat과 관련한 변수는 BaseStat 클래스에 통합되었습니다.
- load과 관련한 변수는 BaseLoad 클래스에 통합되었습니다.
- 예전 배경은 bgLegacy에서 처리합니다.
- 최신 배경은 bgLayer에서 처리합니다. 다만 bgLegacy와 bgLayer는 동시에 사용할 수 없습니다.
- bgLayer는 배경전환이 불가능합니다. (코드 특성상), 대신에 bgLayer.setLayerAlpha와 같은 방법을 사용해 페이드를 대체해서 구현해야 합니다.
- bgLegacy는 배경전환이 가능하지만, 단일 배경만 출력이 가능합니다.
4. 참고로 round.js에서 사용하는 클래스들은 라운드가 아니라면 암묵적으로 R로 시작하는 클래스를 사용하지 않습니다.
(그래서, 라운드를 만드는것이 아닌 다른 클래스들은 대부분 B? 란 글자로 시작합니다. R로는 시작하지 않습니다. 이렇게 하는 이유는 자동완성을 편리하게 사용하기 위해서입니다.)
5. 기존과는 코드가 많이 달라졌지만, 라운드의 플레이에는 아직 큰 문제가 없습니다.
그러나 일부 함수를 삭제할 예정이고, 이로인하여 기존 라운드의 코드를 일부 교체해야 합니다.
6. meterRect가 수치가 0 미만이여도 그래프를 출력했던 버그 수정
7. roundData와 관련한 주석의 내용 일부 교체


2023/10/27 ver 0.41.2 - RoundData에서 deprecated된 모든 함수 삭제 및 기존 라운드 알고리즘 변경, bgLayer 기능 강화
1. 참고: 기존 라운드의 알고리즘이 변경되어도 라운드 페이즈(적의 출현 패턴 등...)가 변화하는것은 아닙니다.
2. 보스 모드 삭제 - 모든 라운드에 보스가 나오지 않으며, 보스 출현 자체가 불규칙적이기 때문입니다.
대신 라운드 내부적으로 보스가 뜬 것처럼 구현하는것으로 변경. 따라서 기존에 나왔던 보스에 대한 코드는 교체했습니다.
4. 라운드 2-1, 2-2, 2-3, 2-4, 2-6는 bgLayer를 사용하도록 교체되었습니다. (기존 코드는 제거되었습니다.)
5. 라운드 2-5는 배경이 움직이지 않으므로 bgLegacy를 그대로 사용합니다.
6. bgLayer와 관련한 여러 버그들을 수정했습니다. (알파값, 프로세스, 동기화 등등...)
7. bgLayer에 layer는 배경과 동기화를 하지 않고 따로 움직일 수 있습니다.
8. 배경음악 출력 버그 수정 (배경음악 데이터를 공통으로 사용하기 때문에 의도하지 않는 배경음악 재생이 있었음)
9. 이제 배경레이어의 일부 정보도 라운드 데이터에 저장됩니다.
10. bgLayer의 get, set 관련 함수를 대거 추가
11. intruderEnemy 중 잔상효과를 가진 적의 잔상 개수를 너프(능력치는 차이가 없지만, 불필요하게 많은 이미지를 출력하는것은 아닌 것 같음)
12. 편의기능 추가: 필드에서 점수를 얻지 않은 상태에서는 결과창 없이 바로 메인화면으로 이동 할 수 있습니다.
13. 라운드 알고리즘 부분적 교체

참고: round 2-4는 점수 부분과 코드 부분에 대해 수정이 필요하고, donggramiEnemy와 intruderEnemy도 코드 수정을 해야하지만
이것까지 하기에는 작업이 너무 많으므로, 2-4부분만 추가로 수정하고, 적들의 코드는 그대로 둘 예정입니다.


2023/10/27 ver 0.41.3 - 기존 deprecated된 그라디언트 코드 교체 및 인터페이스의 숫자 위치 미세조정
참고: 2-4는 나중에 수정할 예정(적어도 3-4까진 만들어야 할듯)
아직 레벨과 점수 밸런스에 대해서는 정해지지 않았습니다. (유저 스탯 및 전투력 포함)
적어도 3라운드가 어느 정도 진행되어야 결정할 수 있을 듯 합니다.
확실하게 결정된것은 3라운드의 레벨 제한이 20이라는 것이고, 3라운드의 라운드 수가 1, 2라운드보다는 많다는 것입니다.
3-1을 시작하기 전에, 지금까지 미루어왔던 일부 작업을 진행합니다.

1. 기존에 사용하였던 그라디언트 코드 교체
2. bgLayer가 잘못된 알파값을 저장했던 문제 수정 (초기화 코드가 alphaEnd 값을 변경하지 못하였음.)
3. 인터페이스 숫자 위치 1픽셀씩 변경


2023/10/27 ver 0.41.4 - round 2 backup 버전


2023/11/02 ver 0.42.0 - round 3에 사용될 옵션(무기) 이미지 추가, imageDataObject 클래스의 정식 사용
2023/11/05 ver 0.42.1 - round 3-1 ~ 3-5 배경 추가
2023/11/06 ver 0.42.2 - round 3 옵션 무기 추가, fieldData가 자기 자신의 오브젝트를 다른 좌표에 출력할 수 있는 함수 추가, 버그 수정
2023/11/08 ver 0.42.3 - round 3 음악 추가, music04 드럼 소리 변경(music03과 동일하게, 기존 방식은 실수로 만들어진 부분이 있습니다.)
2023/11/12 ver 0.42.4 - round 3 towerEnemyGroup1 image added


2023/11/20 ver 0.42.5 - round 3 enemy data add
이 버전 이후부터는 아마, commit과 버전이 따로 처리될 것입니다.
라운드 1개가 만들어지거나, 무언가 인터페이스등이 변경된경우 버전이 변경됩니다.
이제부터는 업데이트 내용을 소개할 때 설명문보다는 명령문으로 변경

1. round 3-1 towerEnemyGroup1의 이미지 추가 (2023/11/13)
2. round 3-1 towerEnemy의 사운드 추가 (2023/11/16)
3. round 3-1 enemy의 알고리즘 추가 (2023/11/20)
4. fieldData에서 imageData가 있는 이미지를 간편하게 출력할 수 있는 함수 추가 (2023/11/19)
5. enimation에 flip 적용 (지금까지는 degree 옵션만 적용되어있었음) (2023/11/19)
6. player가 enemy에 충돌했을 때, enemy의 회전각도를 고려하여 충돌판정하도록 변경 (2023/11/19)
(기존에는 사각형 단위로 충돌했지만, 이렇게하면 이미지상에는 닿지 않아도 판정 영역은 충돌하는 문제가 있어 수정했습니다.)


2023/11/21 ver 0.42.6 - round 3 enemy die effect, enemy image merge
1. imageData 관리를 간편하게 하기 위해서, 적과 관련된 것들(enemyAttack, enemyDie, enemyBullet)은 전부 같은 그룹의 단일 이미지로 합쳐집니다.
- 이에따라, 기존에 사용중이던 일부 적들의 imageData와 imageSrc를 호출하는 코드가 변경됩니다.
2. round 3-1 적 죽음 이미지, 알고리즘 추가
3. imageDataObject의 enemyBullet 삭제
4. 불필요하게 만들어졌던 텍스트 파일 병합(image/enemy 폴더 내부)


2023/11/23 ver 0.43.0 - saveData change, round 1-1 backgroud speed change
1. 라운드 1-1의 배경 스피드 방식이 변경되었습니다.
(138초부터 빠르게 감소) -> (130초부터 배경 속도가 감소하고, 140초부터 빠르게 추가로 감소)
2. 라운드 1-1 디버그로 인한 80초 시작 부분 삭제
3. 유저의 경험치의 막대가 정확한 비율로 표시되지 않던 오류 수정
4. 세이브 파일의 형식이 변경됩니다. (v0a36 -> v0a43)
- tamshooter4SaveData1 키워드를 사용하도록 변경하고, 이 키워드에 모든 세이브 데이터를 저장
- 기존 데이터는 삭제되지 않지만, 더이상 갱신되지 않습니다. (새로 게임을 할 경우 새로운 방식의 데이터만 저장함)
- startDate가 정상적으로 저장됩니다. (기존에는 저장되지 않았음)
- saveDate의 Month가 정상적으로 저장됩니다. (javascript Date의 getMonth가 0부터 시작하기 때문에 이에 관한 처리를 추가)
- 새 데이터가 없고 기존 데이터가 남아있다면 0.36버전의 데이터를 불러옵니다. (다만 이 기능은 추후에 삭제될 수 있습니다.)
- 경고: 데이터가 손상된경우 복구할 수 없습니다. 이 경우에 대한 처리는 다음 버전에서 구현됩니다.
- 만약 이전버전을 플레이 하고 싶다면, 세이브데이터의 충돌이 발생할 수 있으므로 주의해야합니다.
- 0.43 버전의 세이브데이터가 있다면 0.36 데이터가 있어도 0.43버전의 데이터가 갱신되지 않습니다.
- 게임 내에서 데이터를 삭제한 경우, 0.36 ~ 0.43 버전의 데이터가 전부 삭제됩니다.
4. 일부 세이브데이터는 조작된다 하더래도 원래 상태로 복구됩니다. 다만 다른 데이터를 변형하면 오류가 발생할 수 있습니다.


2023/11/23 ver 0.43.1 - saveData error check
1. 게임에 관한 오류 처리는 하지 않습니다.
- 만약 게임 도중 자바스크립트 오류가 발생하면 게임은 더 진행되지 않습니다.
- 오류가 났을 경우 새로고침해주세요.
2. 불러오기를 했을 때 필드 데이터가 오류가 날 경우, 필드 데이터는 삭제하고 메인 화면으로 되돌아갑니다.
3. 세이브 데이터가 오류가 날 경우, 다음과 같은 과정을 거칩니다.
- 백업 데이터를 참조하여 다시 복구
- 백업 데이터까지도 오류가 날 경우 에러스크린을 표시합니다.
- 참고: 오류가 나면 데이터가 영구히 삭제되며 복구할 수 있는 방법은 없습니다.
- 일부 데이터를 잘못 수정하면 오류가 발생하여 해당 데이터는 무효처리됩니다.
4. 백업용 데이터 추가
5. 이제 세이브데이터 삭제는 localStorage.clear()를 사용하지 않습니다.
- 대신, 각 키워드를 참조하여 삭제됩니다.
- v03a36은 saveFlag가 살아있을때에만 관련 키워드를 삭제하고 아닐경우 삭제하지 않습니다.
- 이마저도 downTower가 완성될 때 하위호환코드를 제거할 예정입니다.
6. errorMessage는 text.js에서 문자열 상수로 불러오도록 변경
7. 데이터를 잘못 조작한경우 오류를 막기 위해 데이터가 영구적으로 삭제됩니다.


2023/11/23 ver 0.43.2 - saveData error update
1. 누락된 코드 추가
- 사실 0.43.1을 업데이트하면서 병합 충돌로 인해 아무거나 병합을 하였습니다.
그런데 VScode에서 javascript/typescript 관련 오류가 발생했습니다.
그래서 자동완성, 문법오류 확인기능이 다 오류가 떠서, 해당 버전을 0.43.0으로 되돌리고
기존에 백업해둔 코드를 비교해가며 다시 작업했습니다.
2. saveData에서 sramData의 배열 값들이 8글자 이하일 가능성을 고려하지 않은 코드 문제 수정
3. 백업 데이터 추가 (경고: 백업 데이터까지 오류가 발생하면 데이터가 영구히 삭제되며 복구할 수 없습니다.)


2023/11/23 ver 0.43.3 - field menu A/B button
1. field 에서 start버튼을 통해 menu를 불러올 때, a/b 버튼도 사용 가능하도록 변경했습니다.
2. user exp meter 가 잘못된 비율로 표시되던 버그 수정 (이것은 0.43.0 에서 수정됨)
3. game.control 에서 input 된 버튼을 리셋시키는 함수 추가
4. field에서 나갈때, 메인화면에서 잘못된 메뉴를 누르는 문제 수정


2023/11/23 ver 0.43.4 - load data 버그 수정


2023/11/23 ver 0.43.5 - bug fix
1. round 2-5에서 보스 체력이 두번 출력된 문제 수정
2. 죽은 적은 데이터 저장하지 않도록 수정 (세이브 로드 후 중복으로 점수를 얻는 문제가 발견됨)
3. 필드 데이터를 불러왔을 때, processNoraml을 동작하지 않도록 변경 (버그 방지용도로)
[기존 버전에서 일부 데이터를 표시해야할 이유가 있었기 때문에 해당 코드를 유지했었습니다.]
[그러나, 라운드 진행 상황을 다른 형태로도 표시할 수 있으므로 해당 코드를 제거]
4. round 1-3 음악 페이드 구간 수정
[참고: 페이드 인이 되지 않는것은 버그가 아님(아직 해당 기능이 없습니다.)]


2023/11/25 v0.44.0 - controlSystem - change moblie pad
1. mobile 패드가 image 에서 html css button 으로 변경했습니다.
이것은 엔진에서 이미지의 경로가 어딘지를 확신할 수 없기 때문에
외부 요소를 최대한 사용하지 않기 위해 교체했습니다.
2. //@ts-check도 추가, 코드가 타입에 맞도록 변경되었습니다.
3. controlSystem에서 buttonDown을 연속으로 입력했을 때
각 시간 간격을 설정할 수 있습니다. (모든 버튼에 공통 적용)


2023/11/25 v0.44.1 - soundSystem - fade in/out change
1. 페이드 인 아웃 방식이 변경됩니다.
2. 페이드 하여 다음 음악으로 넘어가는 기능이 엔진에서 삭제됩니다.
3. 기존 페이드 효과는 roundData에 추가적으로 다시 구현하였습니다.
4. tamsaEngine의 biosMenu에서 soundTest부분이 변경되었습니다.
5. 참고: 이 버전에서는 tamsaEngein의 bios메뉴가 오류를 일으킵니다.
(최대한 빨리 수정할 예정)


2023/11/25 v0.44.2 - tamsaEngine upadte / monospace font
1. 탐사엔진의 바이오스 메뉴 변경
2. graphicSystem의 fillText 부분도 flip이 정상적으로 적용되게 변경
3. tamsaEngine의 resourceSrc (탐사엔진이 사용하는 리소스)가 전부 삭제되었습니다.
4. 바이오스 메뉴에서는 courier new 폰트를 사용합니다.
5. 리소스 파일과 관련한 엔진 버그 수정


2023/11/26 v0.44.3 - tamsaEngine - sound test update
1. 탐사엔진의 바이오스 메뉴 변경
2. select 버튼을 연속 5회(3초 이내에) 누를 경우 bios 메뉴로 언제든지 진입이 가능합니다.
3. start + select 조합으로는 더이상 bios 메뉴에 진입할 수 없습니다.
4. sound test 변경 (엔진에 등록된 파일들 리스트를 보여주고 실행하는 역할을 합니다.)
(참고: 필요한 파일을 우선적으로 로드하는 특성 때문에 모든 파일을 로드하지 않을 수 있습니다.)
5. tamsaEngine에서 cotnrol의 processButton을 호출하도록 변경
[대신 setInterval에 등록되었던 processButton은 삭제]
6. sound를 정지하는 기능 추가 (기존에는 한번 효과음을 재생하면 끝까지 재생되었습니다.)
일반적으로 사용할 일은 없겠지만, 만일을 위해서 만들었습니다.
7. sound test에서 buffer 기능 삭제


2023/11/26 v0.44.4 - tamsaEngine - image test update
1. 탐사엔진의 이미지 테스트 메뉴 추가
[참고: 게임을 진행하면서 이미지를 추가로 로드하기 때문에 모든 파일이 로드되지 않을 수 있음]
2. 탐사엔진이 잘못된 이미지 또는 사운드를 테스트하던 오류 수정


2023/11/26 v0.44.5 - tamsaEngine - remove unused file


2023/11/27 v0.44.6 - music bug fix, music resume add
1. soundtest, imagetest 에서 각 리스트에 관한 배열 최대개수 표시 버그 수정
2. 음악 재생 관련 버그 수정
3. 기존 음악 재생과 처리 방식이 달라졌기 때문에, musicResume을 추가하였습니다.
4. field에서 음악을 정상적으로 불러올 수 있도록 로드 변수를 이용한 음악 재생 기능 추가
(라운드에는 음악이 어디까지 재생되었는지를 저장하고 있는데, 이를 이용하여 음악을 계속 재생할 수 있습니다.)
5. round 3-1이 있지만, 완성된 라운드가 아닙니다.
6. towerEnemy.btm 파일의 이름을 towerSound.btm으로 변경 (다운타워의 사운드를 모아놓은것으로 의미 변경)


2023/12/01 v0.45.0 - round 3-1 beta, bug fix
1. round 3-1이 플레이 가능하지만, 아직 완벽하게 구성된 것은 아닙니다.
그러나 변경점이 너무 많아 관리가 어려우므로 현재까지 완성한 것을 push(푸쉬)했습니다.
2. round 3-1 추가, 사운드 추가, 보스전 음악 추가, 일부 배경 변경
3. round 3에서 사용할 bossWarning, bossSprite 추가
4. 동그라미가 대화를 하지 않던 버그 수정 (graphicSystem의 fontSize를 가져오는 부분이 변경되어서 생긴 버그)
5. 엔진에 관한 코드가 일부 변경됨 (버그 수정 및 기능 재설정)
6. 테스트 라운드 코드 변경
7. field에 있는 모든 오브젝트는 isDelete가 활성화되면 삭제해야 합니다.
하지만 이와 관련된 코드에 문제가 있어, 역방향으로 isDelete를 탐색하도록 변경됩니다.
(일부 적 총알이 잘못된 형태로 좌표가 밀리는 현상이 있었음)
8. 미사일 이펙트 관련 버그 수정 (신규 옵션 무기 테스트하던 멀티타겟 기능을 변경했는데
기존 무기에 버그가 발생해서 원래대로 되돌렸습니다.)


2023/12/13 v0.45.1 - round 3-2 add, balance patch
무려 2주만의 업데이트...
1. round 3-1 밸런스 수정
2. round 3-2가 추가되었습니다.
3. 새로운 적 이미지, 사운드 추가 (2023/12/11)
4. round 3-1의 배경에서 비어있던 부분을 원래대로 복구했습니다. 
5. 배경 깨짐을 방지하기 위해 정수배율로 배경 이동속도 변경
6. fieldData에 setMoveSpeedLineChase와 같은 함수들 추가 (반복적인 코드가 많아 함수로 합침)
7. round 3의 playerOption 밸런스 수정, purple 변경, kakhi 추가
8. playerOption의 파워 아이템이 색을 몰라도 구분할 수 있도록 이미지 추가
9. baseDivScore 개념 추가 
(intruderEnemy까지만 해도 단독이였지만, towerEnemy의 추가로 일괄적인 적 그룹에 대한 점수 조정이 필요)
10. intruderEnemy의 nextEnemy 가 다운타워에 나오는 적으로 변경됩니다.


2023/12/15 v0.45.2 - bug fix, enemy collision update
1. 필드가 끝나고 메인화면에 메뉴가 눌리는 오류 수정
2. 사각형 형태의 적들이 아닌 적들 중 일부는 충돌 범위가 수정됩니다.
3. //@ts-check 를 사용했을 때 오류가 발생하는 코드들 제거
4-1. imageData는 기본값이 지정됩니다.
4-2. FieldData의 setAutoImageData는 imageData와 image null확인을 하지 않습니다.
5. 페이드 인, 아웃과 관련한 버그 일부 수정
6. 라운드 시작시 무조건 음악의 0초부터 재생되도록 변경


2023/12/15 v0.45.3 - bug fix
1. field의 sprite의 삭제 여부 확인중 배열의 인덱스를 증가시키면서 검사한 오류 수정
2. 라운드 3-2에서 적을 너무 많이 소환한 오류 수정
(switch문에서 break가 없어서 적 5마리가 한꺼번에 나왔음)
3. towerEnemyGroup2.hellla. towerEnemyGroup2.lightning 공격 사운드 수정
4. 적이 가지고 있었던 debugcode 제거
5. 필드가 끝나고 메인화면에 메뉴가 눌리는 오류 또 수정 (일단 가능한 방법은 전부 사용해봄)
(이래도 안되면 답이없음)
6. 라운드에서 임시로 사용했던 debug제거
(일부 라운드에서 버그 발생하면, 테스트하기 위해 디버그 코드를 중간에 넣는데
작업이 끝난 후에 디버그 코드를 제거하는걸 자주 잊어버립니다.)


2024/02/21 v0.46.0 - downtowerEnemyGroup3 file add
이미지 구상 및 그리는데에만 약 1 ~ 2주를 사용했습니다.
중간에 너무 힘들어서 잠시 휴식을 한것이 2개월이 지나버렸네요.
12월 말까지는 이 게임을 작업했었지만, 1월은 포커 및 엘소드에 시간을 전부 사용했고
2월에는 아무것도 하진 않았습니다. 그러다가 갑자기 이 게임이 생각나서 다시 시작하게 되었네요.
(아마 이런식으로 개발이 되었다가 중단되었다가를 계속 반복할겁니다.)

1. 다운타워 3-3 ~ 3-4에 나올 적들의 이미지와 사운드가 추가되었습니다.
(알고리즘은 추후 개발 예정)
2. 음악 폴더에 있는 텍스트파일 내용 추가, 사운드 폴더에 있는 텍스트파일 내용 추가


2024/02/25 v0.46.1 - some enemy algorithm add
1. 라운드 3-3에 사용할 일부 적들의 알고리즘 추가
2. 3-1 보스전 스프라이트 버그 수정
3. 3-1 보스는 더이상 이동 패턴을 사용하진 않습니다. (보스가 벽에 충돌하면서 움직이는 패턴)
4. 아직 모든 적의 알고리즘은 추가되지 않았으며, 일부 적들의 코드 리펙토링이 필요합니다.
5. 3-2 보스는 플레이어랑 부딪히면 위로 튕겨지며 보스의 체력이 대폭 감소했습니다. (10000% -> 4000%)
[참고로 딜 부족으로 플레이어가 죽을 일은 아마 없을것 같음.]


2024/02/26 v0.46.2 - round 3-3 add, downtower balance patch
1. 다운타워 3-1, 3-2의 finishTime(피니시타임)이 감소했습니다.
이것은, 던전의 길이가 너무 길다고 생각해서 줄인것입니다.
(특정 라운드 제외) 각 라운드의 길이는 4분 이하가 되도록 하겠습니다.
2. 이에따라, 3-1과 3-2의 적들의 등장하는 빈도 및 구조가 수정되었습니다.
3. 라운드 시간 참조
3-1: 240 -> 200 
3-2: 240 -> 220 (필드 시간이 더 긴 대신 보스 체력이 적습니다.)
3-3: 200
4. 다운타워의 일부 적들의 등장 위치가 적이 생성될 때 강제로 조정되도록 변경함
5. 3-3 배경 수정


2024/02/29 v0.46.3 - round 3-4: music add, enemy add
1. 라운드 3-4 음악이 추가되었습니다.
2. 라운드 3-4 배경과, 라운드 3-3 배경 일부 수정
3. 라운드 3-4 적 추가
4. enimation이 있는 적을 enimation이 없는 이미지 데이터로 재할당 할 때
에니메이션이 제거되지 않던 오류가 수정됩니다.
5. towerEnemyGroup3의 충돌 범위 수정
6. coreRainbow의 효과는 무지개 생성이 아닌 이동속도 증가로 변경되었습니다. 
(다만 무지개 소환 이미지는 남아있습니다.)
7. 아직 라운드 3-4는 완성되지 않았습니다.


2024/03/02 v0.46.4 - round 3-4 add
라운드 3-4가 완성되었습니다.

1. gitignore 수정 (업로드 되지 말하야 할 임시 파일들을 커밋하지 않게 변경)
2. round 3-4 energy 적 이동 방식 수정
3. round 3 난이도 및 밸런스 수정
4. ship 이동속도가 변경됨
5. towerEnemyGroup3의 clockJong 충돌 범위 수정 (밑의 부분은 맞지 않음)
6. towerEnemyGroup3의 clock 적들 죽었을 때 나오는 효과음 노이즈 부분 변경
7. 라운드 아이콘을 추가했습니다. (2-3 ~ 3-4까지)
8. towerEnemyGroup3의 energyA 적의 이미지 부분적 수정


2024/03/10 v0.46.5 - round 3-5 phase 1 add
라운드 3-5의 페이즈 1추가
1. 보스 체력 표시 함수가 일부 변경되었습니다.
2. 3-1 bossRobot의 이름이 crazyRobot으로 변경
3. round 3-5 관련 이미지, 사운드 추가
4. 일부 보스의 이름 변경됨 (커밋 당시에는 이 부분의 대한 안내가 누락되어있었음.)


2024/03/14 v0.46.6 - round 3-5 music add
음악만 일단 추가 (아직 라운드 3-5는 미완성이므로, 제대로 된 플레이를 할 수 없습니다.)


2024/03/18 v0.46.7 - saveData update, sprite save
1. 스프라이트는 이제 필드시스템에 저장되고 불러올 수 있습니다.
(그러나, 기존 라운드는 아직 이것을 활용하지 못했습니다. 과거에는 이를 해결할 방법을 못찾았기 때문입니다.)
2. attack 기능이 fieldData로 이동하고, attack 가능 여부를 확인하는 변수가 추가되었습니다.
3. save 관련 함수 이름이 변경되었습니다.
4. saveString, saveList가 추가되어, 기본적인 요소 이외에 다른 저장 요소가 필요한 적들은
좀 더 자세하게 저장할 수 있습니다. (그러나 최근에 만들어진 변수라 아직은 적용된 대상이 없음)
5. 이제 weapon객체는 mainType이 skill, skillsub를 제외하고 저장되지 않습니다. (저장 공간을 줄이기 위해)
6. round 3-5의 페이즈 시간이 변경되었습니다. (아직 완성된것은 아닙니다.)
7. 일부 배경음악의 이름이 변경됨


2024/03/19 v0.46.8 - bug fix + round 3-5 phase 2
1. processAttack이 중복적으로 출력되던 버그 수정
(fieldSystem으로 processAttack을 이동시킨 이후, 일부 기존 코드들과 호환이 안되는 문제가 있음)
2. fieldData에 알파값 추가 (이제 직접 수동으로 그래픽시스템을 조작하는것이 아닌 알파값을 수정하여 반투명을 처리하도록 변경)
(다만 기존 코드들은 아직 이 값을 사용하지 않고 직접 graphicSystem을 수정합니다. 
다만 해당 코드를 수정하지 않아도 큰 문제는 없으므로, 기존 코드는 그대로 유지됩니다.)
3. sprite, enemyBullet을 생성할때 객체를 첫번째 인수로 사용하면, x, y좌표를 지정하지 않았을 때
해당 객체가 가지고 있는 좌표로 자동 지정됩니다.
weapon, enemy는 id기반으로 생성하기 때문에 좌표가 자동 지정되지 않습니다.
4. delayCount관련 저장 오류 수정
5. enemyBullet의 자동 삭제 시점을 설정할 수 있는 기능 추가
6. graphicSystem의 alpha가 비정상적인 범위 값을 받으면 수치를 보정하도록 변경됩니다.
(기존엔 잘못된 수치는 무시했음. 그러나 숫자값 이외는 오류가 발생할 수 있습니다.)
7. bgLayer에서 레이어 정보를 저장할 때 isSynchorize도 같이 저장합니다. 
(저장 후 불러오기를 하면 레이어 동기화 버그가 있었음)
8. weapon이 lineChase(선 형태로 적 추적, 방향 변경 없음)를 잘못된 형태로 사용했던
과거 코드를 수정하였습니다. (다른 객체들은 개선되어있었지만, weapon은 linechase알고리즘이 예전버전이라
문제가 있었습니다. 이것은 굉장히 늦게 눈치챈 사실입니다.)


2024/03/21 v0.46.9 - round 3-5 phase 3-1
중간 체크포인트 (아직 3-5라운드는 완성된것이 아닙니다.)
1. enimation에서 degree, flip, alpha가 적용되도록 변경
기존에는 수동으로 변경해서 적용하는 방식이였지만, 지금은 자동으로 적용됩니다.
2. 라운드 1-1, 1-3에 출현하는 보스의 점수가 상승합니다.
이전에는, 보스의 점수를 낮추기 위하여 baseDivScore가 200이였습니다. 지금은 100 기본값입니다.
이로 인해, 1-1, 1-3보스를 죽였을 때 얻는 점수가 기존보다 2배 상승합니다.
이렇게 변경된 이유는, 다른 보스들은 해당 요소가 없었기 때문입니다. 그래서 제거했습니다.
3. 라운드 1-1의 보스 데미지가 감소합니다. (40 -> 15)
이것은, 일부 라운드에서는 보스 데미지가 적용되지 않기 때문입니다.
처음부터 너무 큰 데미지를 받을경우, 사람들은 보스에게 닿아도 된다는 생각을 할 수 없기 때문에
과도하게 큰 데미지는 초반 라운드에서 제거되었습니다.
4. 초반 라운드의 높았던 데미지들은 너프되었습니다. (20가 초과하지 않게끔)
5. fieldData의 setRandomMoveSpeedMinMax 수정
어떤 이유에서인지, setRandomMoveSpeed와 다르게, isMinusInclued가 없었습니다.
그 때문에 예전 버전에서는, 음수 속도를 설정하기 위해 다른 코드를 추가로 생성해야 했습니다.
지금은 그렇게 할 필요가 없지만, 기존 코드들은 그걸 감안하면서 작성했기 때문에
일부 코드는 아직 옛날코드의 잔재가 남아있을 수 있습니다.
6. 사실, 아직도 옛날 코드의 잔재가 많이 남아있습니다. 버그는 거의 없지만(필드전에서 세이브/로드 제외)
이전에 만들었던것과 이후의 만들었던것들은 코드 차이가 매우 큽니다.
7. fieldData에서 height를 잘못된 이름으로 저장하던 오류 수정
8. saveList를 정상적으로 불러오지 못한 코드를 수정 (key값으로 구분해야 하지만, 객체값으로 구분하는 실수를 했음.)


2024/03/24 v0.47.0 - round 3-5 complete, menu select error fix
1. round 3-5 tornado는 이제 enemyBullet입니다.
2. enemyBullet은 연속공격이 가능합니다.
3. round 3-5 에서 사용하는 코드 리펙토링
4. round 3-5 밸런스 부분적으로 수정
5. 지금까지 알 수 없는 이유로, 필드를 끝냈을 때 메인 메뉴가 가끔 눌리는 현상이 있었습니다.
그동안 이유를 몰랐었는데, 확인해보니 click의 값이 계속 true로 유지되었기 때문입니다.
이 때문에 마우스를 누른 것으로 인식해버려서, 예상하지 못하게 메뉴를 선택한 것입니다.
이 문제는 드디어!(약 1년간... 노력의 끝에...) 해결했습니다.
이제 마우스클릭과 키다운은, 주기적으로 그 값과 관련된 처리를 합니다.
5-2. 그리고, 이로 인해 만들었던 임시 코드들은 이제 필요없으므로 삭제되었습니다.
6. tamsaEngine의 바이오스를 직접 접근할 수 있는 함수를 추가하고,
게임 내에서 바이오스에 접근할 수 없게 하는것을 설정할 수 있는 함수와 변수를 추가했습니다.
(참고: 바이오스 접근 방법은 게임 시작 5초 이내에 2초동안 select버튼을 5번 누르세요.)
7. 그 외 일부 버그들 수정
8. music21_round3_5_antijemulHyper 음악 수정 (약간 달라짐)


2024/03/29 v0.47.1 - round 3-6 file add, checkpoint
2024/03/30 v0.47.2 - round 3-6 ~ 3-7 file add, checkpoint

2024/04/02 v0.47.3 - roundicon code moved datastat.js
1. 라운드 아이콘은 이제, dataStat.js에 정의됩니다.
tamshooter4.js에 정의되었던 라운드 아이콘과 관련한 코드가 전부 삭제됩니다.
2. 라운드 3-6이 부분적으로 업데이트되었지만, 완성되지 않았습니다.


2024/04/12 v0.47.4 - round 3-6, round 3-7 complete
원래는 4월 3일에 완성되었어야 하지만, 몸이 너무 아파서 이런저런 고생을 하다보니
일주일간 아무것도 하지 못했습니다. 두통에 바이러스에 온갖것들이 저를 괴롭히는군요.
지금은 괜찮아졌습니다. 솔직히 이 때는 너무 고통스러웠습니다.
(설명하면 너무 길지만... 여기에 작성할 필요는 없겠지...)

1. 일부 적들의 밸런스 수정됨
2. 완성되지 않은 라운드에 접근 시 게임이 멈추는 오류 수정
3. 테스트 라운드의 텍스트가 보여지지 않은 부분 수정
4. music23_down_tower_core.ogg 가 약간 변경되었습니다.


2024/04/16 v0.47.5 - round 3-8 ~ 3-9 image add
2024/04/18 v0.47.6 - new music add


2024/04/22 v0.47.7 - round 3-8 ~ 3-9 complete
1. 일부 디버그 코드 제거
2. round 3에서 보스 이름이 출력되도록 변경
3. 라운드 3-8, 3-9 추가
4. towerEnemyGroup2의 octaShadow와 octaLight의 타입이 서로 잘못되었던 점 수점
(라운드 3-2를 진행할 때는 잘못처리되긴 했지만, 게임 진행이 가능했으나
우연히, 이 적들을 다른 라운드에서 생성했을 때 무한생성되는 버그를 알게됨)
5. round 3-5에서 phase2 blackspace에서 greenRoom의 gasi가 제대로 삭제되지 않는 문제 수정
6. round 3-5 phase 3 antijemul의 등장 시점 및 배경음악 재생 시점 수정
7. 라운드 3-8, 3-9는 옵션 등장 구조가 미완성입니다. 조만간 옵션 밸런스를 수정할 예정


2024/04/24 v0.48.0 - round 3 change option balance
1. round 3 에서 사용하는 옵션의 밸런스가 변경
- 초록색은 이제 플레이어의 이동 방향에 따라 여러 방향을 공격할 수 있습니다.
- 카키색은 위, 아래방향으로 발사하며 벽에 부딪히면 적을 무조건 빠르게 추적합니다.
- 보라색은 3방향으로 발사되며 오른쪽 벽에 부딪혔을 때 적 추적속도가 매우 크게 증가합니다.
- 검정색은 벽에만 튕겨지며 적을 반드시 관통합니다.
- 핑크색은 적을 관통하도록 변경합니다.
- 옵션의 dps 구조가 변경
[10, 12, 20, 24, 40, 48, 56, 80, 90, 100] -> [10, 14, 18, 30, 36, 42, 60, 70, 80, 100]
- 옵션의 무기 발사 횟수, 개체수 전부 변경
- 옵션이 시간에 따라 성장하는것을 보여주기 위해서, 1단계는 상대적으로 약합니다. (2단계 이후는 큰 차이 없을 수 있음)
2. round 3의 진행시간에 따라 dps부분의 평균값의 기준이 결정되었습니다. (round 3-5 제외)
(참고: 일부 라운드는 각 페이즈 단위의 시간이 다를 수 있음. 이를 고려해서 dps기준을 변경했습니다.)
0 ~ 30초: 40% ~ 80% (옵션의 dps 10% ~ 18%)
31 ~ 60초: 80% ~ 120% (옵션의 dps 30% ~ 42%)
61 ~ 90초: 120% ~ 160% (옵션의 dps 60% ~ 80%)
91초 이후: 200% (round 3-6부터 최대 220%)
보스전: (200% x 1second) + (200% x 임의의 추가 값)
보스전은 일반 잡몬스터에 비해서 체력이 높아야 하므로, 추가적인 배수값이 있습니다.
이 규칙에 따라 3-9보스의 체력이 변경되었습니다. (나머지는 그대로 유지)
4. 라운드 3의 초록색 옵션 구현을 위해서 플레이어 이동을 기존 FieldData랑 동일한 규칙을 사용하도록 변경
5. round 3-1의 첫번째 옵션 한정으로 GET 글자가 표현됩니다. (유저가 얻게끔 의도하기 위해서)
6. 옵션의 등장 순서 및 구조 변경 (라운드 3 전체적으로)
7. towerEnemyGroup5의 radio는 이제 항상 이동합니다.
8. round 3-8 ~ 3-9 밸런스의 변경

부록
3. 보스 체력의 기준은 다음과 같습니다. (3-5P11을 제외하고, 전부 초당 200%단위입니다.)
3-1: crazyRobot: 200% x (40s + 10s) = 200% x 50 = 10000%
3-2: bossBar: 200% x 20s = 5000%
3-3: dasucore: 200% x (40s + 10s) = 10000%
3-7: gabudan: 200% x (60s + 10s) = 14000%
3-9: vacuumCleaner: 200% x (30s + 15s) = 9000%
3-5P11: nokgasi1: 140% x 80s = 11200%
3-5P12: nokgasi2: 200% x 70s = 14000%
3-5P21: antijemul: 200% x 14s = 2800%, 
3-5P22: red/green: 3000%(200% x 15), tornado: 6000%(200% x 30)
3-5P23: area: 4000%(200% x 20)
3-5P31: antijemul: 20000% (200% x (90 + 10))
3-5P32: antijemul: 20000% (200% x (90 + 10))
3-5P41: antijemul: 4000% (200% x 20)
3-5P42: antijemul: 3000% (200% x 15)
3-5P43: antijemul: 3000% (200% x 15)


2024/04/29 v0.48.1 - round 3-10 complete
1. round 3 관련하여, 적을 다 죽인 후 클리어까지 2초의 대기가 있게끔, 시간 멈춤 시기 변경
2. 라운드 3-10 추가 (배경, 배경음악, 스프라이트 추가)
- 3-10이 마지막 라운드이며, 이 시점에서 더이상 새로운 라운드는 추가되지 않습니다.
(다음 파트로 넘어가기 전까지)
3. music25_down_tower_outwall 음악 변경 (이전에 있었던 음악은 임시로 작성된 음악이라 교체할 생각이였음)


2024/04/29 v0.48.2 - change round production
// 참고: r = round
1. r1-4: 마지막 페이즈가 끝날 때 쯤, 배경이 변경되도록 변경
2. effect 폴더에 있는 이펙트들은 jemulEnemy쪽으로 이동됩니다. (기존 effect폴더는 삭제)
2. r2-1: 페이즈 중간 이후, 구름 레이어가 서서히 사라짐
3. 누락된 파일 추가 (r3-10에 나오는 스프라이트 원본)
4. music08_round1_4_jemul, music07_paran_planet_entry 에 공백 구간 추가
5. music08 noise 부분에서 lowpassfilter 강화
6. 일부 라운드의 finishTime 변경
r1-4: 151 -> 156, r1-6: 152 -> 154
7. 일부 라운드의 알고리즘 부분적 변경 (단, 게임 진행은 동일)
8. r2-5, r3-5 클리어 사운드 변경


2024/05/01 v0.48.3 - round 1-4 another route
1. r1-4관련 추가적인 음악 및 배경 추가
2. r1-4 알고리즘 수정
3. 라운드3에 대한 낙서인 메모장 파일 추가


2024/05/01 v0.48.4 - round 1-4 hotfix
1. r1-4 보스 체력 변경 (이전 버전 v0.48.3은 테스트를 위해 보스의 체력을 낮게한거였음.)


2024/05/02 v0.48.5 - add round icon, music fade code change
1. 라운드 아이콘 추가
2. round 2의 배경음악 재생, 변경, 페이드 관련 코드 수정 
3. round 1은 기존 코드 그대로 유지
(어차피 deprecated되어있어, 해당함수는 더이상 사용하지 않도록 해두었음.)


2024/05/05 v0.49.0 - user stat change (attack, hp)
1. 공격력 스탯의 방식이 변경되고, 필드에서 무기 또는 스킬의 데미지를 계산하는 방식이 변경됩니다.
전투력 개념은 공격력으로 변경됩니다.
기존방식
공격력 x (무기 할당값 1.0) = 무기 공격력
공격력 x (스킬 할당값 0.8) x 4 = 스킬 공격력
전투력 = 무기 공격력 + 스킬 공격력

현재방식
전투력 = 공격력
무기 공격력 = 공격력의 28%
스킬 공격력 = 공격력의 18%

무기 공격력 + 스킬 공격력 = 공격력 총합 100% 
((18 x 4) + 28) = 100

1-2. 공격력 개념이 변경됨에 따라서, 레벨업시 오르는 공격력도 조정됩니다.
1-3. 서브웨폰은 삭제됩니다. (서브웨폰의 목적은 남은 적이 있다는것을 알려주기 위한 용도였습니다.
이젠, 다른것으로도 남은 적이 있다는것을 게임 내에서 표시할 수 있으므로, 서브웨폰은 필요없습니다.)
1-4. 공식 변경으로 인해, 약간의 공격력 변화가 있을 수 있음.
기존 방식: 무기 비중 27.27% + 서브웨폰 비중: 0.045%, 스킬 비중 72.72%
현재 방식: 무기 비중 28%, 스킬 비중 18% x 4 = 72%

2. hp가 300으로 증가하고, 더이상 받는데미지가 감소하지 않습니다.
(과거에는 hp 120에, 1/2 데미지 감소가 있었음)

3. shield, hp가 소수점 단위를 처리하기 위하여, 일부 스탯이 증폭된 채로 계산되는 특수한 값이 추가되었습니다.
(이것은 hp 1이, 실제로 계산될 때에는 100배 늘려서 계산한다는 뜻입니다.)
예시: damage 24, damageReduce 4%
damage: 24 * 100 = 2400
damageReduceResult: 2400 x 0.96 = 2304

hpCalcValue = 23000 - 2304 = 22696
hp = Math.floor(hpCalcValue / 100) = 226
if (hp >= 0 && hp <= 1) hp = 1

3-1. 게임을 로드한다면 강제로 hp상태를 갱신하도록 변경합니다.
(로드 즉시 상황에서는, hp와 shield가 제대로 값을 불러오지만, 화면에 갱신되지 않아 최대값으로만 보여집니다.)

3-2. hp의 최소 표시값은 1입니다. (내부적으로 hpCalcValue가 남은 경우) 단, 죽은경우, hp는 0입니다.


2024/05/05 v0.49.1 - damageSound add, bug fix
특정한 적이 플레이어에게 데미지를 주었을 때, 특정한 사운드를 재생할 수 있습니다.
(코드는 이전 버전에서도 변경되었지만, 수정 내역을 따로 만들기 위해 버전 번호를 구분하였습니다.)

이에따라, 일부 적들의 코드가 수정되었습니다.

(플레이어 이동 방식 변경에 영향을 받는 2-3 라운드의 코드 일부 수정됨.)
(사용되지 않는 효과음 제거됨, round 3-2 bossBar에 해당)
(hp, shield 계산 버그 수정, shieldCalc값이 최대치를 초과하는 경우가 있었음.)


2024/05/07 v0.49.2 - equipment add, menu + title change
1. 장비 아이템 추가, 아이템 추가
3. 메뉴 크기 400x50 -> 400x40
(개수가 너무 많아 세로로 너무 길어져서 세로 길이를 줄였습니다.)
4. 타이틀 변경 (과거 타이틀은 엄밀히 따지면 내가 저작권을 가진 개념이 아님...
어차피 임시 타이틀이였고... 나중에 변경할 생각이였음... 생각난 김에 바로 변경함.)
5. 인벤토리, 스토리 메뉴 추가 (다만 현재는 기능 없음)
6. 디지털숫자폰트 내부적으로 내용 추가, 그리고 색 통합 (검정색으로 변경)
[참고: 이전 폰트랑 약간 출력이 다른 것 처럼 보일 수 있음.]


2024/05/07 v0.49.3 - file merge
1. 불필요한 이미지 파일 개수를 줄이기 위해, 일부 파일은 합쳐집니다.
2. 교체된 이미지 삭제
3. 이미지 교체로 인한 코드 일부 변경


2024/05/07 v0.49.4 - weapon balance patch
1. 무기 밸런스 변경 (자세한것은 밑의 부록 참고)
2. 무기는 초창기부터 구현된 객체인 탓에, dataStat으로 데이터를 분산시키는 과정이 제대로 진행되지 않았습니다.
그래서, 일부 무기는 다른 무기들에 비해 강력한 점이 있었습니다.
밸런스를 조정한 후, 설계 문제를 해결하기 위해, 일부 스탯 옵션이 제거되거나 변경됩니다.
무기는 이제 dataStat을 참고하여 일부 스탯이 재설정되도록 변경했습니다.
(무기 정보는 statView.html 파일 참고, statView.js를 import하므로 로컬호스트에서만 동작 가능)
3. afterInitDefault 함수가 enemyBulletData, effectData에서 불필요한 코드를 처리하고 있었던 부분 삭제
그리고 weaponData에서 stat을 추가하가 위한 afterInitDefault 코드 추가
4. weaponData 코드 내의 id, subType, mainType 전부 삭제
(해당하는 값을 명시할 필요가 없이 외부에서 참조하면 됩니다. 다만 이로 인해, id를 간접참조하도록 몇개의 함수를 더 실행해야함)
5. weaponData는 이제 new()로 인스턴스를 생성해 저장하고, 해당하는 함수를 이용해 무기를 만들도록 변경
이 이외에 일관성 없는 코드 구간 전부 수정
6. 플레이어 내부에서는 무기를 new로 생성하지 않도록 변경
7. 라운드 3-5에서, 적 토네이도의 타격당했을 때, 데미지 사운드가 재생되지 않도록 변경 (이건 실수로 수정을 못한거였음)
8. 플레이어의 무기/스킬에 대한 공격력값을 알수 있도록 함수 추가
9. statView 관련 내용 수정

- 부록 -
참고: 전반적으로 무기의 성능이(특히 스킬들) 너프되었기 때문에
일부 라운드는 더 어렵게 느껴질 수도 있음.

1-1. 무기 밸런스 기준 (공격력 범위 80% ~ 120%)
사피아가 100%
멀티샷이 이보다 약간 더 높고
미사일은 이것보다 약간 더 낮음
스플래시는 다른 무기보다 단일 데미지가 낮음 (약 80% ~ 90%수준)

1-2. 무기 밸런스 변경
(대략 80% ~ 120% 범위 사이가 되도록 일부 무기의 스탯 조정)
미사일 = 연속타격수 2회로 감소 (총 데미지는 동일)
미사일 서브 로켓 = 스플래시 범위 증가, 적을 타격한 경우에만 반복공격 (로켓 타격수 3회로 감소)
레이저 = 데미지 110% -> 100%
사피아 = 가까운 적을 우선 공격하도록 하고, 사피아샷 제거
파라포 = 데미지 90% -> 80%
블래스터 = 데미지 120% -> 115%
링 = 데미지 140% -> 112%
래피드 = 데미지 130% -> 120%
부메랑 = 타격수 감소, 속도 대폭증가, 데미지 120% -> 106%
서브무기 <- 삭제

1-3. 스킬 밸런스 변경
데미지 기준값: 
멀티샷이 정확하게 100%의 데미지를 주고,
미사일이 최대 80%의 데미지를 줌,
이 두가지 요소를 이용하여 데미지를 정함
스플래시형 무기는 총 데미지가 대폭 너프됨

쿨타임 기준값 (사실... 자주 사용할만한 스킬들은 20초에 주로 배치됨)
일반형 무기 20초
특수형 무기 24초
스킬형 무기 28초, 밸런스 기준으로 약간의 데미지 보너스가 있음.

멀티샷 - 그대로 유지
미사일 - 데미지 120% -> 70%, 쿨타임 20초로 변경
애로우 - 데미지 120% -> 100%
레이저 - 데미지 80% -> 64%, 쿨타임 20초로 변경
사피아 - 데미지 110% -> 100%
파라포 - 데미지 90% -> 55% (단일 대상 데미지 2배)
블래스터 - 데미지 160% -> 데미지 124% 쿨타임 24초로 변경
사이드웨이브 - 데미지 112% -> 데미지 108%
하이퍼볼 - 그대로 유지 (멀티샷이랑 거의 동일)
크리티컬체이서 - 데미지 140% -> 96%
파일벙커 - 이론상 최대 데미지 210% (70% x 3) -> 범위를 조금 더 확장하고, 150%로 변경 (50%x 3)
산탄수 - 데미지 150% -> 95%
화이트플래시 - 데미지 120% -> 90%
링 - 데미지 110% -> 104%
래피드 - 데미지 130% -> 115%
선단일 - 데미지 130% -> 120%
한주먹 - 데미지 140% -> 120%
부메랑 - 데미지 120% -> 100%
문 - 데미지 100% -> 50% (단일 대상 데미지 2배)


2024/05/08 v0.49.5 - gold, item update, save change
(참고: 05/09에 커밋했는데, 05/08로 잘못 작성함... 이런...)
1. 골드, 아이템 시스템 업데이트
1-1. 골드 획득 방식은, 10초 단위로 진행했을 때, 일정량을 누적시킵니다.
누적값은 라운드마다 다르며, statView.html을 통해 값을 알 수 있음.
(단, 골드를 얻기 위해서 최소 30초 이상 플레이 해야 합니다.)
그리고, 10초 단위로 골드를 얻기 때문에, 159초와 150초 진행은 같은 골드를 얻습니다.
참고: 골드 값은 라운드가 종료될 때 계산하고 추가합니다.
1-2. 아이템 획득 방식은, 라운드를 진행하는 도중 아이템을 가진 적을 생성합니다.
(조건은 라운드마다 다를 수 있음.)
아이템을 가지고 있는 적을 죽이면, 아이템이 화면에 나오고 자동으로 플레이어에게 이동합니다.
(주의: 아이템의 획득 시점은 적을 죽이는 즉시 획득합니다. 
플레이어에게 이동하는 개체는 아이템 개체가 아닌 이펙트 개체입니다.)
현재까지 획득한 아이템의 목록과 리스트는 필드시스템에 저장되며, 
이 기록은 일시정지, 결과 화면에서 볼 수 있습니다.

2. 골드, 인벤토리가 세이브됩니다.
3. 이 버전부터 오류가 발생해 로드에 실패했다면, 남은 데이터를 삭제하지 않습니다.
대신에 게임 실행이 불가능해지며, 로컬 스토리지의 삭제를 권유합니다.
단, 10번정도 스타트 버튼을 누르면 기존에 저장했던 데이터를 삭제하고 새로고침합니다.
4. 이 버전부터 파이어폭스는 지원대상에서 제외됩니다.
(일부 코드에 대해서 너무 느리게 동작하는 경향이 있음)
setInterval도 내부 간격이 넓은데다가, offScreenCanvas를 너무 크게 만들면 그래픽 드로잉에 렉이 너무 심해짐
따라서, 구글 크롬에서 게임을 돌리는것으로 간주하고, 파이어폭스는 버릴 예정
(갤럭시A31 모델에서도 게임 진행에 문제가 없는것을 보면, 파이어폭스의 문제인 것 같음.)
5. 필드 결과에 지금까지 얻었던 골드, 아이템을 표시함 (일시정지할때도 표시됨)
6. 사용되지 않는 효과음 제거


2024/05/10 v0.50.0 - world map add, round select
1. 월드 맵 추가 (단, 이미지와 경로만 표시됨)
2. 라운드 선택 화면 변경
3. 라운드 선택 화면에서는 마우스로 라운드를 선택하려면 2번 클릭해야 합니다.
왜냐하면 마우스 클릭으로도 라운드 정보를 볼 수 있어야 하기 때문입니다.
4. 필드에서 골드와 아이템의 누적값이 초기화 안되는 버그 수정
5. 테스트 라운드는 나중에 리메이크 할 예정...
(개수를 맞추기 위해 3라운데이 있던 테스트 라운드를 2라운드쪽으로 옮겼음.)
6. 기준 개수는 10개인데, 그 이상을 출력할 일이 있을지 모르겠습니다.
7. 타이틀에 있는 버전 값 변경
8. 라운드 월드에 대한 설명 데이터 추가, 라운드 선택 화면에서 볼 수 있음.


2024/05/10 v0.50.1 - weapon select menu, weapon preset
1. 무기, 스킬의 프리셋이 추가되었습니다. (0 ~ 4, 총 5개)
2. 무기, 스킬은 이제 같은 프리셋끼리는 중복하여 장착할 수 없습니다.
초창기에 개발했을 때에는, 한개의 무기만 사용하는것도 개성이라 생각하였으나,
나중에 생각해보니, 오히려 다양성과 개성이 떨어질 가능성이 높다고 생각했습니다.
그래서, 이제부터는 중복 무기/스킬은 사용할 수 없습니다.
3. 무기 선택 메뉴 형태 변경
4. 무기 제거 기능 추가 (NULL 무기를 장착하면 됩니다.)
5. 필드 진행 도중 무기를 변경할때, 다음 무기가 비어있으면 자동으로 다음 무기로 이동하도록 변경
그러나, 필드에서는 무기를 사용하지 않는 맨 마지막 번호의 무기가 있습니다. 
이것은 비어있는 무기가 아니라 무기를 사용하지 않는 상태를 나타내므로 
맨 마지막 번호의 무기는 자동으로 다음 무기(0번)로 이동하지 않습니다.
5. 당연한거지만, 무기와 스킬의 프리셋 정보를 저장합니다.


2024/05/11 v0.50.2 - skill select menu
1. 스킬 관련 도움말 추가 (다만, 임시로 만들어진거라 지금은 텍스트만 있음)
2. 스킬 선택 인터페이스 변경
3. 스킬 프리셋 설정 기능 추가, 스킬 변경 함수 추가
4. 스킬 스탯 설명에서 이미지 파일에 있는 오타 수정 (atttack -> attack)
5. 스킬, 무기 기본값과 기본 프리셋을 제대로 정의함
6. test 메뉴는 나중에 구현할 예정
