참고: skz1024는 글을 작성하는 과정에서 계속 수정하다보니 실수로 번호를 잘못 지정할 수도 있음. (예를들어, 중간번호가 빠지는경우... 이건 실수입니다.)

2022/03/01 start?
2022/05/05 ver 0.10
- 대략적인 게임 코드 설계 완료
- 대부분의 기능은 미완성 상태입니다.

현재까지 추가된 기능
- 키보드 및 마우스 인식 (단, 이 게임에서는 키보드를 버튼처럼 취급합니다.)
- 사운드 기능 (아직 시스템 사운드만 있습니다.)
- 자동 저장 기능 (플레이 타임, 유저 첫 생성 날짜만 저장 가능)
- 필드 기능 (아군이 총알을 쏘고 적이 죽는것까지 구현되어있습니다.)

현재까지의 코드 상황을 저장하기 위해 0.1 버전을 만들었습니다.
(여기까지 완성하는데 약 2달... 이건 코드를 만드는게 어렵고 이것저것 실험을 많이 해서 그런겁니다.)


2022/05/14 ver 0.11-1
1. 코드의 구성이 변경되어, 이제 tamshooter4Data는 클래스만 리턴합니다.
  따라서, fieldState에서 직접 인스턴스를 생성하는 방식으로 변경되었습니다.
1-1. 이렇게 만든 이유는, 며칠동안 새로운 알고리즘을 추가하고, 한개에 함수에 몰아넣었던 로직을 다른 함수로 기능을 분리하는 과정에서, undefined 함수 참조 문제가 발생해, 원인을 찾아보니 data 함수에서는 해당 함수가 있었지만, fieldState의 fieldObject 클래스는 해당 함수가 없어 함수를 참조할 수 없는 문제가 발생했습니다.
1-2. 이 문제를 해결하는 기존 방법은, fieldObject 클래스에 data에서 사용되었던 함수를 지속적으로 추가하는 거였습니다. 그러나, 새로운 무기가 나온다면, 당연히 새로운 알고리즘이 나올것이고, 당연히 로직이 길어지는 과정에서 여러 함수들로 기능을 쪼갤것인데, 이렇게 되다보면 나중에 새로운 무기를 개발할때마다 새로운 함수를 fieldObject에 지속적으로 추가해야만 합니다. 이로 인하여, 기존 방식으로 개발하게되면 나중에 유지보수가 매우 힘들어집니다. 그 때문에, 새로운 방식을 며칠동안 고민해야 했습니다.
1-3. 결국, fieldState에서 직접 클래스 데이터를 받아와 인스턴스를 생성하는 방식으로 변경하였습니다. 자바스크립트는 배열에 다양한 객체를 넣을 수 있기 때문에 가능한 방법이였으며, 어떤 로직을 만들고 다른 함수로 기능을 분해한다고 해도, fieldState는 process, display, fieldProcess만 호출하면 모든 역할이 끝납니다.


2022/05/16 ver 0.11-2
1. damageObject가 추가되었습니다.
이 오브젝트는 적을 타격하여 데미지를 주었을 때 그 데미지의 값을 출력합니다.
이 오브젝트는 임시이며, 나중에 다른 형태로 변경될 수 있습니다.
2. missile 알고리즘이 추가되었습니다.
사실, multyshot은 구현하기가 매우 쉬웠지만, missile은 스플래시모드와 일반모드, 그리고 적 여러명을 동시에 때려야 하고 여러번 폭발해야 하기 때문에 구현하기 위해서는 복잡한 로직이 필요했습니다. 실제 코드를 보면 알 수 있듯이, 내부적으로 로직이 여러개로 분리되어 각 역할을 수행하는 것을 알 수 있습니다. multyshot은 따로 알고리즘이 존재하진 않지만, missile은 multyshot에 비해선 알고리즘 복잡한 편입니다. 그리고 이 미사일 알고리즘은, 이전에 만들었던 fieldObject 처리 방식을 변경하는 원인이 되었습니다. (자세한건 ver 0.11-1 참고)
3. effectObject가 추가되었습니다. 일단 목적은 간단해요. 이펙트 에니메이션을 출력하는 역할입니다. 첫번째 이펙트는 당연히 missile입니다. missile이 터지는 효과가 있어야 스플래시 데미지를 주는 느낌이 나니까요. multyshot은 이펙트가 필요 없지만, missile은 있어야 합니다.
4. 참고로, 이펙트는 모든 오브젝트가 가지고 있는 것은 아니고, 부분적으로만 가지고 있습니다. 어떤건 이펙트가 있고, 어떤건 이펙트가 없어요. 그냥 그렇습니다.
5. 이펙트의 투명도가 0.7(70%)로 조정됩니다. 이유는 눈아파서...
6. testAttackEnemy가 추가되었습니다. 딱히 의미는 없고, 플레이어 충돌시 데미지를 주느냐의 테스트 목적입니다.


2022/06/05 ver 0.12-1
1. 새로운 알고리즘(OBB 충돌 알고리즘)을 구현하고 찾아보는데 너무 많은 시간이 걸려 업데이트가 2주간 지연되었습니다. 겨우, 해당알고리즘을 사용하는 방법을 알아내 다시 게임 제작을 진행하려고 합니다. 다만 이 알고리즘은 추후에 추가됩니다.
2. EnimationData 클래스가 추가되었습니다. 이 클래스는 Data가 가지고 있는 에니메이션을 표현할 때 사용됩니다.
3. missile에 새로운 이펙트가 추가되었습니다. (다만, 그림이 작아서 잘 보이지는 않는듯?)
4. DelayData 클래스가 추가되었습니다. 이 클래스는 지연시관 관련 작업을 수행합니다. (예를 들어, 일정시간마다 무기를 발사하는 등... 의 용도로 사용)
5. DelayData, EnimationData 클래스의 추가로, 지연시간을 사용하는 데이터의 소스 코드가 모두 변경되었습니다. 이제 지연시간이 없으면 null로 처리합니다. 그리고 해당 객체에 대해 null 체크를 합니다.
6. 새로운 무기가 추가되었습니다. arrow, laser


2022/06/10 ver 0.12-2
1. 새로운 무기 추가: laser, sapia, parapo
2. laser 알고리즘이 완성되고, collisionOBB 클래스가 추가되어 회전한 사각형의 충돌 판정을 할 수 있습니다. (다만, OBB 충돌 방식은 일부 객체만 사용할 예정)
3. sapia 무기가 추가되었습니다. 이 무기는 적을 추적하면서 추가타격 및 추가샷을 사용합니다.
4. parapo 무기가 추가되었습니다. 이 무기는 적을 타격하면 일정 범위만큼 추가타격을 합니다.
5. 이번 무기까지 내용을 이번 버전에 임시 저장합니다.
6. 일부 무기들은 옵션이 필요하므로(새로 추가된 sapia), createWeapon에 일부 옵션을 사용할 수 있도록 한 후, 생성자에서 옵션을 받을 수 있도록 했습니다. (참고: 생성자에서 공통적인 요소(좌표값, 공격력)을 입력받지 않는 이유는, 새 생성자를 만들때마다 해당 내용을 계속 작성하기 귀찮기 때문입니다. 그래서 공통으로 입력받는것은 따로 분리를 해서 자동으로 입력받게끔 했습니다.)
6. 예상하지 못한 선 그리기의 색깔 버그를 수정했습니다. (무조건 검은색으로만 칠해지는건 버그임)


2022/06/12 ver 0.13
1. 새로운 무기 추가: blaster, sidewave
2. 이 시점에서 더이상 새로운 무기를 추가하지 않습니다. 이제 다른걸 만들어야 하기 때문입니다.
3. 생성자에서 인수를 받아 개별적인 처리가 가능함에 따라, 멀티샷의 모든 기능은 단일 클래스로 합쳐지고 필요없는 멀티샷 클래스 및 객체는 삭제됩니다. (대신 인수를 넣어 구분할 계획)
4. 스킬 개념이 곧 추가될 예정입니다.
5-1. 에니메이션 클래스의 출력 버그를 수정했습니다. 첫번째는 이미지 내의 y좌표를 잘못 계산한것이고, 두번째는 반복 횟수와 관한 출력 버그입니다.
5-2. 에니메이션 클래스의 내용이 일부 변경되었습니다. 이제 조금 더 명확한 단어를 사용합니다.
5-3. 에니메이션 지연시간은 기본값 1입니다. 이것은 초당 30번 재생하는것을 의미합니다. (참고로 게임은 초당 60프레임)
6-1. 반복횟수는 다음과 같은 의미로 재정의됩니다. 해당 행위를 반복하는 횟수, 단 실행된 후에 반복하는 것이 아니라 단순히 횟수만큼 반복을 합니다. 예를들어, 반복횟수가 0 또는 1인경우, 해당 객체는 1번 실행됩니다. 그리고 반복횟수가 2인경우, 해당 객체는 2번 실행됩니다. 반복횟수가 n인경우 해당 객체는 n번 실행됩니다.
6-2. 이것이 재정의 된 이유는, 실행한 후에 반복을 할 경우, 반복 횟수를 계산하는 과정이 꼬여 로직이 복잡해지기 때문입니다. 그래서 아예 실행횟수 = 반복횟수로 만들어버리기로 했습니다.
6-3. 따라서, 반복 횟수의 기본 값은 1입니다. 0으로 설정하면 아예 실행조차 되지 않고 삭제될 가능성이 있습니다.
7. 플레이어가 사용하는 무기의 총 공격력 percent가 약갼 변경되었습니다. 이것은 무기별 밸런스에 어느 정도 영향을 줄 것입니다.
8. 무기에 옵션 사용 설정에 따라, 불필요한 클래스와 객체는 제거되었습니다.
9. 무기의 공격력 반영 비율이 제대로 적용되지 않던 문제를 수정했습니다.

next!
이제 스킬이 나올 차례입니다!

2022/06/16 ver 0.14 스킬 추가
수정된 내용
1. arrow 이미지가 살짝 변경되었습니다.

추가된 내용
2. 총 8개의 스킬이 추가되었습니다. 대부분의 스킬 이름은 무기의 이름과 거의 동일합니다.
3. 스킬과 관련된 사운드가 추가되었습니다.
4. 스킬과 관련된 정보 및 이미지가 추가되었습니다.

스킬 테스트 안내
스킬 키의 기본값은 각: A, S, D, F 키 입니다.
X키로 스킬을 변경할 수 있고, Z키로 무기를 변경할 수 있습니다.


2022/06/24 ver 0.15
무려 1주일이 지났네요. 적을 만드는데 상당히 오랜 시간이 걸렸습니다.
특히, 회전 기능같은걸 생각하는데 너무 많은 시간을 사용해버렸네요.

추가된 내용
몇개의 적들이 추가되었습니다. 현재는 운석만 나옵니다. 다음엔 던전을 추가 할 계획입니다.

수정된 내용
1-1. playerWeaponData, playerSkillData는 static 클래스 방식에서 constuctor 방식으로 변경했습니다. 따라서 getPlayerWeaponData, getPlayerSkillData는 클래스를 리턴하지 않고, 이미 만들어진 객체를 리턴하게 됩니다.
1-2. 이렇게 바꾼 이유는, static 클래스에서 vscode 프로그램를 이용해 변수명을 변경했을 때 상속받은 클래스의 변수명이 변경되지 않았기 때문입니다. 이렇게 될 경우, 함수의 이름이나 변수명을 수정했을 때 이전클래스와 이후 클래스에 호환성 문제가 발생하므로, 다시 생성자 방식으로 변수를 사용하기로 했습니다. (인스턴스 생성하기 귀찮아서 static 사용했는데, 오히려 이것때문에 이후에 문제가 발생할 가능성이 높음.) 결국 다시 롤백...
2-1. 파라포 무기 반복횟수(충격파 포함)가 2 -> 1로 변경되었습니다. 왜냐하면, 데미지 계산식이 너무 복잡해지고 그에 따른 처리 프로세스도 늘어나기 때문. 대신 발사 간격이 줄어들었습니다.
3-1. 적이 죽은 상태에서 무기의 공격 처리를 막기 위해 무기가 공격하는 알고리즘 함수들을 몇개 분리하고, 리펙토링 하였습니다.
3-2. 죽은 적은 더이상 무기가 추적하지 않습니다.
3-3. 죽은 적은 더이상 남은 체력바를 보여주지 않습니다.
3-4. 데이터 내부에 들어가는 적의 ID는 필요할 때만 사용할 예정입니다. 사실 작성하기 귀찮다. 꼭 필요한 것도 아니고...
4-1. 생각해보니, 회전 및 뒤집기 요소가 필요할 것 같아서, 이를 지원하는 기능을 추가했습니다. 그런데 이걸 추가하다보니 고려해야 할 요소가 너무 많아져서, data에서 사용하는 기본 객체들의 출력 알고리즘을 일부 변경하였습니다.
5-1. 이제 대부분의 필드데이터는 이동 속도가 방향과 속도값으로 정의되고 대신 speedX, speedY는 잘 사용하지 않습니다. moveSpeed와 speed의 차이점은, 방향값이 있냐 없냐의 차이고, speed는 좌표 기준으로 속도값을 정의합니다. (+는 방향값 무시하고 오른쪽, 아래쪽으로 이동), moveSpeed는 moveDirection의 값에 따라 이동 방향이 달라집니다. 만약 방향값이 없다면, speed값을 그대로 사용합니다.
5-2. 이렇게 한 이유는, 속도값은 정의할 때 양수로 표현하는것이 바람직하기 때문입니다. 음수로 지정하면 데이터를 만들 때 혼동이 올 수 있습니다.
5-3. 하지만 속도값을 이동방향이 들어간 속도값으로 바꾸는 과정에서 엄청난 시행착오가 발생되었으나, 단순히 대소문자 오타로 확인됨.(...)
6-1. 레이저블루의 이동위치에 대해 보정값이 추가됩니다. 이상하게 적을 못때리더라...
7-1. 코드 일부를 javascriptStandardStyle로 수정합니다.



2022/06/27 ver 0.16
이 버전에서는, 일시정지가 가능하고, 약 20초동안 적이랑 싸울 수 있습니다.
어느 스테이지를 선택해도 똑같은 게임이 진행됩니다.
이제 게임의 기본적인 틀은 전부 완성되었습니다. 이제 각 라운드를 만들 수 있겠네요.

추가된 내용
1. 게임을 플레이한 결과와 관련된 이미지가 추가되었습니다.
2. 필드(게임 플레이)에서 일시정지를 및 결과에 사용되는 이미지가 추가되었습니다.
3. 라운드가 정상적으로 진행되는 로직이 추가되었습니다. (다만 라운드는 완성되지 않았음.)
4. 라운드 클리어, 게임 오버, 일시정지 사운드가 추가되었습니다.
5. alphabet 과 number의 bitmapFont가 추가되었습니다. (이미지 제작 용도)
6. 배경 화면 추가 (스크롤도 가능)

수정된 내용
1. enemyData의 processExitToReset 함수가 가지고 있던 맨위/맨아래, 맨왼쪽/맨오른쪽을 지속적으로 왕복하던 문제를 수정했습니다. 이 오류는 추적무기의 버그를 보고 알아냈는데, 처음엔 무기가 잘못 추적했다고 생각했으나, 진짜 이유는 적이 계속해서 잘못된 위치(맨 위, 맨 아래)를 왕복하고 있었기 때문입니다. 이 버그는 수정되었습니다.
2. fieldSystem의 damageObject는 더이상 FieldData의 데이터 형태가 아니라 독자적인 데이터를 가지며 처리 속도 향상을 위해 pool 방식으로 데이터를 처리합니다.
3. alphabet 과 number의 digitalFont가 합쳐졌습니다. svg 원본 파일도 같이 합쳐졌습니다.
4. fieldData를 표시할 때 배경색도 같이 출력됩니다. (기존엔 배경색이 없어서 배경이 검은색이면 데이터가 안보였음.)


2022/09/14 ver 0.17
한참만이네요. 정보처리기사 공부 도중 코로나에 걸린 이후 모든 의욕을 잃고 1달동안 하스스톤 전장만 했습니다. 그리고 전장 시즌도 끝나고, 아무 생각없이 있다가, 누군가가 웹 오디오 관련 코드 작성을 제안받고 개발 코드를 작성하는 도중에 의욕이 생겨 다시 도전하게 되었습니다. 원래대로라면 지금쯤 라운드 1이 완성되어있어야 할 시점인데 한참 늦어졌네요. 지금, 무슨 코드를 더 작성해야 하는지 기억이 나지 않습니다. 그래서 그냥 제 생각대로 업데이트 할 생각입니다.

지금 업데이트한 내용은 다음과 같습니다.
1. 사운드와 배경음악을 출력할 때 웹 오디오 API를 사용합니다. 배경음악은 약간의 에코 효과가 있습니다.
2. 볼륨을 설정하는 기능이 추가되었습니다. 마스터는 150%까지, 사운드와 배경음악은 100%까지 볼륨 조절이 10%단위로 가능합니다.
3. 옵션에서 설정한 값들이 저장되도록 했습니다. (그러나 아직 일부 옵션은 게임에 적용되지 않습니다.)
4. 임시 배경음악 (과거 optionbattle에서 사용했던것 중 하나) 재생, 그러나 음악이 재생되면 무한 반복되며 정지하지 않습니다.


2022/09/21 ver 0.21-1
라운드 1에서 사용할 모든 배경음악 추가
배경음악 작업이 끝났으므로, 라운드 제작 작업이 진행될 예정
적어도 1라운드는 완성해야 서버를 만들든 데이터베이스를 다루든 무언가를 할 수 있을거라 생각됨.
라운드 1의 배경음악 파일은 존재하지만, 게임 내에서는 아직 들을 수 없습니다.

2022/09/29 ver 0.21-2
1. 음악 파일 이름 오타 수정(...)
2. graphicDisplay 함수 설명 오타 수정
3. 라운드를 나가거나, 클리어, 게임오버일경우 배경음악이 정지됩니다. 일시정지의 경우 배경음악이 일시정지됩니다.
4. 이제 다른 옵션 없이도, flip 과 rotate 수정을 하면 자동으로 회전 및 뒤집기 효과를 적용하도록 변경되었다.
5. fieldData의 기본 display 함수는 코드의 편한 관리를 위해 defaultDisplay 함수를 호출하는것으로 변경하고, defaultDisplay 함수에 기본 출력 함수를 구현했습니다.
6. 라운드 선택 기능 추가
7. enemyBullet 추가
8. 적이 죽었을 때, 이펙트 와 사운드가 출력됩니다.
9. 옵션에서 설정값이 제대로 저장되지 않는 버그 수정(필드 옵션은 추후 적용 계획)
10. 플레이어가 데미지를 맞았을 때 사운드와 이펙트가 출력됩니다.
11. 그 외에도 코드 수정한게 이것저것 있습니다.

이제 좀 게임다워졌군요. 하지만 시간이 너무 오래 걸렸습니다.
필드 만드는데 3달... 1-1 만드는데 1달... 언제 1-6까지 완성하나...


2022/10/02 ver 0.21-3
이것저것 수정한것이 많은데도 아직 1-1까지만 완성되었습니다.

1. 적들의 스탯을 일부 수정하고 더 편하게 작성할 수 있도록 함수를 추가
2. enimation 부분은 다시 process와 display가 분리되었습니다. 코드 작성이 귀찮아서 합쳐놓았는데, 별로인것 같습니다.
3. round 1-1의 구조를 약간 변경하고, 라운드 관련 몇가지 함수들을 추가했습니다.
4. 일부 적 버그 수정
5. 보조 무기 추가(보조무기는 적을 자동으로 추적합니다.), 이것이 추가된 이유는 일부 무기는 유도성이 없어 화면 바깥에 있는 적을 못찾기 때문입니다.
6. 보조 무기 추가로 무기 밸런스 구조가 변경되었습니다.
6-1. 기존 (일반 1.0 + (스킬 0.8 * 4)) = 총합 4.2
6-2. 현재 (일반 1.0 + 보조 0.2 (스킬 0.8 * 4)) = 총합 4.4
7. multyshot, blasterMini의 추적 방식이 lineChase 방식으로 변경됩니다.
8. 플레이어 죽는 이펙트 추가